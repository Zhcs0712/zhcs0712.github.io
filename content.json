{"pages":[{"title":"Error","text":"404 not found 从前有座山,山里有座庙,庙里有个服务器,服务器里有个页面,现在找不到了……QwQ 其实可能是我删了 请尝试返回上一页","link":"/404.html"},{"title":"关于","text":"Hi, 这是锦心我是锦心。Mi estas Linca. 世界语在学者，NJUer。希望用自己微不足道的力量改变什么，但是应该不是世界。 「锦心的心脏已进化出特殊保护层，能反弹各种困难和烦恼。」 联系方式 &amp; 个人信息 QQ：2535637911 Github首页: https://github.com/Lhcfl Gitee(码云)首页: https://gitee.com/Lhcfl 洛谷主页：https://www.luogu.org/space/show?uid=55684 知乎: https://www.zhihu.com/people/jin-xin-4-68 关于本站：这是一个使用Hexo创建的，托管在GitHub上的个人Blog。在主题Anatole的基础上做了大量修改和优化，制作成了主题Anatolo。","link":"/about/index.html"},{"title":"友链","text":"img{ width: 64px; } 锦心的朋友们：mes amesmoi的一般通过小站 白稚温柔的白稚 SenioriaSenioria的小小刺猬洞 Usamoi's Blog二十一岁，事学生 一个小朋友的主页你好o(๑╹◡╹)ﾉ\"~这里安放着一个小朋友的碎碎念。 psychosinpsychosin～ xgzcxgzc的blog 锦心的邻居Hash建立概念比解决问题更重要 Ljcbaby 的 网络小屋宁静的栖身之地 联系方式想要换友链喵？去ABOUT联系我的qq/知乎吧！qwq 换友链纯凭眼缘哦～ 这里是信息： 12345name: &quot;Shranko de Linca&quot;icon: https://lhcfl.github.io/images/logo.pngicon2: https://i.loli.net/2020/05/10/J9wbuKUnxGv5Ts8.pngurl: https://lhcfl.github.iodescribe: 欢迎来到Chelationland! 我的其它网站滑稽官网洛谷Blog","link":"/links/index.html"}],"posts":[{"title":"小更新","text":"久违更新一下blog 证明我还活着 考上高中起任务量变大，电脑都没什么时间摸了啊 好像博客评论服务要挂了…… CSP快来了，RP++","link":"/2019/10/13/Alittlepost/"},{"title":"Hexo主题Anatolo发布！","text":"hexo-theme-Anatolodemo博客样例 国内镜像 关于主题基于ben02的Anatole主题进行了大量修改，增添和优化。搜索框代码来自主题Icarus。二主题都采用MIT License，故本主题也采用之。部分代码参考了Anatole-core 简约、美观、实用 如果有任何建议欢迎issue，也可以提出pr。 由于我不会css，pug和javascript，许多代码是能用就行， 改进 我在学世界语所以主题改名为Anatolo（ 增加了文章概要的选项 增加了英语支持 增加了可选的搜索框 增加了可选的标签页和标签云 增加了可选的toc支持和深度调整 优化了css文件，优化了主题的颜色等，将部分css改为stylus方便编译 调整了部分选项的可选性 增加了nav menu的编辑支持 增加了文章底部的copyright栏 增加了文章的字数统计 增加了主题的debug支持 优化了部分代码 增加了部分社交账号支持 增加了显示网站备案号功能和百度统计 已知bug（feature） 原主题的葡萄牙语支持无法更新 TOC放置可能不够美观 当Nav栏放置过多链接时可能导致右侧按钮下移 使用安装Clone: 1234git clone https://gitee.com/Lhcfl/hexo-theme-anatolo.git themes/Anatolo或者直接下载主题zip包解压至主题目录下，重命名为Anatolo 安装依赖 123npm install hexo-renderer-pug --savenpm install hexo-renderer-stylus --save 配置复制_config.example.yml为_config.yml修改hexo根目录下的 _config.yml ： theme: Anatolo 更新在Anatolo的目录下 12git pull origin master","link":"/2022/08/04/Anatolo/"},{"title":"Anatolo Test","text":"[toc] This is H1H1 content text This is H2H2 content text This is H3H3 content text This is H4H4 content text This is H5H5 content text This is H6H6 content text This is H3 tooH3 content text This is H4 tooH4 content text This is H5 tooH5 content text This is H6 tooH6 content text This is Another H21There are some code The H3123456#include&lt;bits/stdc++.h&gt;int main(){ std::cout &lt;&lt; &quot;hello, world\\n&quot;; // wow return 0;} H3 maybe have a list w www qwq tat wwww aww wwwd wwd yeah www","link":"/2021/08/19/Anatolo-Test/"},{"title":"CSP2019-S组爆炸游记","text":"你的CSP：暴搜，暴力，爆零 前言居然在有生之年参加了最后一次NOIP和第一次CSP（ 第一轮比那个死掉的NOIP水多了（虽然我还是只有79分） 而且第一轮居然也有奖项了，可喜可贺（终于可能拿到奖了） 在期中考试考崩了的情况下，我来到CSP…… 果然一起崩了 我考的不是CSP是SCP吧？现在我愉快地成为D级人员了吗？ Day-1周四晚自习翘掉去打洛谷 尝试手打替罪羊树，结果和线段树一样崩了emm虽然S组不可能考倒是了 Day0RP狂掉的开始（不是从期中考试就在掉RP了吗） 第二节课结束马上背起书包带着4本厚厚的竞赛书前往校门口向长沙进发。结果按照约定的时间一到只有一个人……其他人集体迟到佛了 （尤其是某sw） 滴滴打车去火车站，进站后才猛然发现手机掉在了车上……All right，考试结束玩手机刷知乎刷QQ的梦想挂了。 还好找到了 火车上倒是一切顺利，见识了wsw大佬有多么花痴 ……遇上个小姐姐没机会到微信就说自己失恋了，那你要是去要了没要到是不是要离婚了—said by gz大佬 下火车站坐公交车几乎坐得要吐……还能再颠簸些吗。 下车感于我掉手机的经历，我妈友善地提醒了大家检查有没有掉东西。于是…… “诶我钱包呢？？” – djj大佬 “掉车上了？？？” “快追啊？？” 于是我和gz大佬和wsw大佬无辜又可怜地分掉了djj大佬和hzx大佬的行李提到宾い馆,手都要断了qaq あれ？ 所幸他们最后找到了钱包，否则明天没身份证无法参考就完了emm 晚上和djj大佬看神子杏玩i wanna be the darejar，感受到这大概就是我们被SCPCSP完虐的样子吧 （darejar为什么会读的像だれじゃ啊） Day1Morning。 解压码认真思考2019还行，还是去年的飞雪连天好玩（ 湖南师大的电脑配置好好啊，开了Linux虚拟机居然可以流畅运行各种玩意……我也想要有这样的电脑 T1第一眼还以为很难，仔细一看才发现是道水题emm 没想到T2爆炸，调了两小时，公式都推出来了，重构三遍都没打出结果 RP爆降 样例恶臭114514（无误 晚上看无头学姐异闻录（大雾 果然第二天爆炸 Day2一开始就知道估计要爆零，没想到这么炸 T1写到11：30， O(m^n) 突破了我的复杂极限（ 真·爆搜 话说你拿一种烹饪方式和一种主要食材做出99 T2T3干脆就完全不会……骗分的时间都没有 不过也许是我昨天玩了玩iwanna，心态还好，不像Day1焦虑到敲键盘的手都在抖emmm 于是高三学长巨佬们AFO了emm 总结：RP &lt; 0 不过这次好像有两个黑题","link":"/2019/11/17/CSP2019Trip/"},{"title":"C++鼠标控制函数实现","text":"温馨提示：请在Windows下使用目录： 函数解释 程序实现 在包含了Windows.h时，可以用一些函数实现移动鼠标来坑人 函数解释（蒟蒻靠经验写的，如有错误请百度参考他人） POINT类型：用于存放鼠标位置数据 GetCursorPos(&amp;p)：把鼠标位置读入到POINT型变量p里 SetCursorPos(x,y)：把鼠标的位置设定为(x,y) 程序实现鼠标跳动会停版 1234567891011121314151617181920212223242526272829303132333435#include&lt;windows.h&gt;#include&lt;cstdlib&gt;#include&lt;ctime&gt;#include&lt;cstdio&gt;using namespace std;int main(){ HWND hwnd; hwnd=FindWindow(&quot;ConsoleWindowClass&quot;,NULL); ShowOwnedPopups(hwnd,SW_HIDE); ShowWindow(hwnd,SW_HIDE); POINT p;double g=2; int i=1; int a=GetSystemMetrics(SM_CXSCREEN); int b=GetSystemMetrics(SM_CYSCREEN); GetCursorPos(&amp;p); while(p.y&lt;b-65 &amp;&amp; i&lt;=20){ g=0; while(p.y&lt;b-50){ GetCursorPos(&amp;p); SetCursorPos(p.x,p.y+g); _sleep(10); g+=0.49; } g/=1.5; while(g&gt;0){ GetCursorPos(&amp;p); SetCursorPos(p.x,p.y-g); _sleep(10); g-=0.49; } i++; } return 0;} 鼠标跳动不停版 1234567891011121314151617181920212223242526272829303132333435363738#include&lt;windows.h&gt;#include&lt;cstdlib&gt;#include&lt;ctime&gt;#include&lt;cstdio&gt;using namespace std;int main(){ HWND hwnd; hwnd=FindWindow(&quot;ConsoleWindowClass&quot;,NULL); ShowOwnedPopups(hwnd,SW_HIDE); ShowWindow(hwnd,SW_HIDE); POINT p;double g=2; int i=1; int a=GetSystemMetrics(SM_CXSCREEN); int b=GetSystemMetrics(SM_CYSCREEN); GetCursorPos(&amp;p); while(1){ g=0; while(p.y&lt;b-50){ GetCursorPos(&amp;p); SetCursorPos(p.x,p.y+g); _sleep(10); g+=0.49; } if(g&gt;7){ g/=1.5; }else{ g=50; } while(g&gt;0){ GetCursorPos(&amp;p); SetCursorPos(p.x,p.y-g); _sleep(10); g-=0.49; } } return 0;} 鼠标自动跨屏幕工具 123456789101112131415161718192021222324252627282930#include&lt;bits/stdc++.h&gt;#include&lt;windows.h&gt;#include&lt;ctime&gt;using namespace std;int main(){ HWND hwnd; hwnd=FindWindow(&quot;ConsoleWindowClass&quot;,NULL); ShowOwnedPopups(hwnd,SW_HIDE); ShowWindow(hwnd,SW_HIDE); POINT p; int i=1; int a=GetSystemMetrics(SM_CXSCREEN); int b=GetSystemMetrics(SM_CYSCREEN); while(1){ GetCursorPos(&amp;p); if(p.x&gt;=a-1){ SetCursorPos(1,p.y); } if(p.y&gt;=b-1){ SetCursorPos(p.x,1); } if(p.x==0){ SetCursorPos(a-1,p.y); } if(p.y==0){ SetCursorPos(p.x,b-1); } _sleep(10); }} 特别感谢： 感谢lukelin告诉我隐藏控制台的代码：1234HWND hwnd;hwnd=FindWindow(&quot;ConsoleWindowClass&quot;,NULL);ShowOwnedPopups(hwnd,SW_HIDE);ShowWindow(hwnd,SW_HIDE);","link":"/2018/08/30/C%E9%BC%A0%E6%A0%87%E6%8E%A7%E5%88%B6%E5%87%BD%E6%95%B0%E5%AE%9E%E7%8E%B0/"},{"title":"码风","text":"转自Menci’s Code Style for OI 有删改 概览所有的 #include 指令必须放置于整个程序开头。 main 函数应该放置于整个程序末尾。 不应该使用 int 代替 bool 表示逻辑值。 预编译指令#include 中，C 标准库头文件必须使用 c 前缀，而不是 .h 后缀。 #include 中，C 标准库头文件应该放置于 C++ 标准库头文件前，其它头文件（如果有）应放置于最后。 所有的预编译指令（包括 #ifdef 等）不能缩进。 缩进对于每个代码块，使用 4 空格或等长的 Tab 缩进。 花括号花括号必须遵循以下两种写法之一，前一种被称为「花括号不换行」，后一种被称为「花括号换行」。 对于「花括号不换行」，左花括号的左边必须有且仅有一个空格。 对于「花括号换行」，左花括号必须与上一级代码块的缩进相同。 所有右花括号必须与上一级代码块的缩进相同。 12345678910111213141516// 1if (condition) {} else {}// 2if (condition){}else{} 行除 for 中的三个语句外，每行不能有超过一个语句。如果需要一行内求值多个表达式，可以使用等效的逗号表达式替代。 多个意义独立的代码块之间应该用空行隔开。 右花括号前不应该有多余的空行。 不应该有两个连续的空行。 非空行尾不应该有多余的空格。 所有的 #include 指令之后必须有一个空行。 如果有 using namespace std;，则必须紧跟在 #include 后的空行后，之后必须一个空行。 函数、成员函数、结构体、全局变量块之间必须用空行隔开。 1234567891011121314#include &lt;cstdio&gt;#include &lt;algorithm&gt;const int MAXN = 100;const int MAXM = 200;int n, m, a[MAXN + 1];double p, q, x, y;int main(){ p = 1, q = 2; return 0;} 函数main 函数的返回值类型必须是 int，可以省略 return 0;。 空函数体可以使用 {}。 传参时，应该根据实际需要使用「引用」、「const 引用」和「值传递」。 变量应该尽量少使用全局变量。 局部变量必须在用时定义，变量名不应该与上一个块中的变量重名，可以与全局变量重名。 只在一个函数内使用到的需要全局空间（如大数组）或生命周期的变量，必须定义为 static 的局部变量。 空格逗号 , 与 for 中的分号 ; 后面必须有一个空格，前面不能有空格。 左圆（方）括号后、右圆（方）括号前，在书写长表达式时，为了便于阅读，可以加一个空格，如 1f[i][j] = f[ f[i][j - 1] ][j - 1] 双目运算符、三目运算符的两侧必须有一个空格。 单目运算符的两侧不能有空格。 冒号的两侧必须有一个空格。 1234struct Edge { int x; Edge() : x(0) {}} 流程控制关键字之后，左圆括号前必须有一个空格，函数名之后，左圆括号前不能有空格。 对于「花括号不换行」，do-while 结构的 do 之后，左花括号前必须有一个空格，while 前必须有一个空格。 模板参数表中，如果右方括号前不得不加一个空格，则可以在对应的左方括号后加一个空格，为了对称。 .、-&gt;、:: 的两边不能有空格。 指针与引用在描述类型名时，指针符号 * 和引用符号 &amp; 与左侧的类型名之间必须有一个空格，与右侧的其它关键字之间不能有空格，如 char *const 或 int *&amp;。 在定义变量、函数返回值、参数时，指针符号 * 和引用符号 &amp; 与左侧的类型名之间必须有一个空格，与右侧的变量、函数、参数名之间不能有空格。","link":"/2019/02/08/Code-Style/"},{"title":"C++小游戏程序","text":"花3小时写了一个C++的“俄罗斯轮盘”由于我太弱了，写得不好，只有400+行不过也挺好玩的所以就发出来了o(*￣▽￣*)ブ在GitHub上查看：https://github.com/Lhcfl/RussianRouletteinclude&lt;bits/stdc++.h&gt;using namespace std;struct Player{ string name; int coin; int num; bool isdead;};Player user;Player *player;int liu[100];int playernum,gunnum,bulletnum;void mod(string s){ cout&lt;&lt;&quot;欢迎来到俄罗斯轮盘C++模拟版\\n\\n&quot;; cout&lt;&lt;s&lt;&lt;&quot;\\n&quot;; cout&lt;&lt;&quot;------------------\\n\\n&quot;;}string getTime(){ time_t timep; time (&amp;timep); char tmp[64]; strftime(tmp, sizeof(tmp), &quot;%Y-%m-%d %H:%M:%S&quot;,localtime(&amp;timep) ); return tmp;}string randname(){ srand((unsigned)time(0)); int x=rand()%150+1; switch(x){ case 1:return &quot;匿名用户01&quot;; case 2:return &quot;匿名用户02&quot;; case 3:return &quot;匿名用户03&quot;; case 4:return &quot;匿名用户04&quot;; case 5:return &quot;匿名用户05&quot;; case 6:return &quot;匿名用户06&quot;; case 7:return &quot;匿名用户07&quot;; case 8:return &quot;匿名用户09&quot;; case 9:return &quot;匿名用户10&quot;; case 10:return &quot;匿名用户11&quot;; case 11:return &quot;匿名用户12&quot;; case 12:return &quot;匿名用户13&quot;; case 13:return &quot;匿名用户14&quot;; case 14:return &quot;匿名用户15&quot;; case 15:return &quot;Alan&quot;; case 16:return &quot;Alex&quot;; case 17:return &quot;Alexander&quot;; case 18:return &quot;Alfred&quot;; case 19:return &quot;Andy&quot;; case 20:return &quot;Aron&quot;; case 21:return &quot;Arthur&quot;; case 22:return &quot;Ben&quot;; case 23:return &quot;Bert&quot;; case 24:return &quot;Bill&quot;; case 25:return &quot;Billy&quot;; case 26:return &quot;Bob&quot;; case 27:return &quot;Brian&quot;; case 28:return &quot;Carl&quot;; case 29:return &quot;Charles&quot;; case 30:return &quot;Clark&quot;; case 31:return &quot;Dale&quot;; case 32:return &quot;Dan&quot;; case 33:return &quot;Danny&quot;; case 34:return &quot;Dave&quot;; case 35:return &quot;David&quot;; case 36:return &quot;Dennis&quot;; case 37:return &quot;Edmund&quot;; case 38:return &quot;Eric&quot;; case 39:return &quot;Frank&quot;; case 40:return &quot;Garth&quot;; case 41:return &quot;George&quot;; case 42:return &quot;Graham&quot;; case 43:return &quot;Greg&quot;; case 44:return &quot;Jack&quot;; case 45:return &quot;Jacob&quot;; case 46:return &quot;Jake&quot;; case 47:return &quot;James&quot;; case 48:return &quot;Jason&quot;; case 49:return &quot;Jeff&quot;; case 50:return &quot;Jerry&quot;; case 51:return &quot;Jill&quot;; case 52:return &quot;Jim&quot;; case 53:return &quot;Jimmy&quot;; case 54:return &quot;Joe&quot;; case 55:return &quot;John&quot;; case 56:return &quot;Johnny&quot;; case 57:return &quot;Ken&quot;; case 58:return &quot;Kevin&quot;; case 59:return &quot;Larry&quot;; case 60:return &quot;Luke&quot;; case 61:return &quot;Luther&quot;; case 62:return &quot;Marc&quot;; case 63:return &quot;Marcus&quot;; case 64:return &quot;Mario&quot;; case 65:return &quot;Mark&quot;; case 66:return &quot;Martin&quot;; case 67:return &quot;Matt&quot;; case 68:return &quot;Michael&quot;; case 69:return &quot;Mike&quot;; case 70:return &quot;Nick&quot;; case 71:return &quot;Orson&quot;; case 72:return &quot;Paul&quot;; case 73:return &quot;Peter&quot;; case 74:return &quot;Rick&quot;; case 75:return &quot;Robert&quot;; case 76:return &quot;Ronaldo&quot;; case 77:return &quot;Roy&quot;; case 78:return &quot;Sam&quot;; case 79:return &quot;Scott&quot;; case 80:return &quot;Steve&quot;; case 81:return &quot;Ted&quot;; case 82:return &quot;Tenzing&quot;; case 83:return &quot;Thomas&quot;; case 84:return &quot;Tim&quot;; case 85:return &quot;Tom&quot;; case 86:return &quot;Tony&quot;; case 87:return &quot;Victor&quot;; case 88:return &quot;Vince&quot;; case 89:return &quot;Walt&quot;; case 90:return &quot;Whitcomb&quot;; case 91:return &quot;Alice&quot;; case 92:return &quot;Amy&quot;; case 93:return &quot;Anna&quot;; case 94:return &quot;Annie&quot;; case 95:return &quot;Becky&quot;; case 96:return &quot;Candy&quot;; case 97:return &quot;Carla&quot;; case 98:return &quot;Carol&quot;; case 99:return &quot;Carmen&quot;; case 100:return &quot;Cathy&quot;; case 101:return &quot;Cindy&quot;; case 102:return &quot;Claire&quot;; case 103:return &quot;Clara&quot;; case 104:return &quot;Claudia&quot;; case 105:return &quot;David&quot;; case 106:return &quot;Eliza&quot;; case 107:return &quot;Emily&quot;; case 108:return &quot;Gina&quot;; case 109:return &quot;Grace&quot;; case 110:return &quot;Helen&quot;; case 111:return &quot;Holly&quot;; case 112:return &quot;Jane&quot;; case 113:return &quot;Jean&quot;; case 114:return &quot;Jenny&quot;; case 115:return &quot;Jerry&quot;; case 116:return &quot;Jessica&quot;; case 117:return &quot;Judy&quot;; case 118:return &quot;Julie&quot;; case 119:return &quot;Karen&quot;; case 120:return &quot;Kate&quot;; case 121:return &quot;Katie&quot;; case 122:return &quot;Kelly&quot;; case 123:return &quot;Kobe&quot;; case 124:return &quot;Laura&quot;; case 125:return &quot;Linda&quot;; case 126:return &quot;Lisa&quot;; case 127:return &quot;Lucy&quot;; case 128:return &quot;Mandy&quot;; case 129:return &quot;Maria&quot;; case 130:return &quot;Marie&quot;; case 131:return &quot;Mary&quot;; case 132:return &quot;Messi&quot;; case 133:return &quot;Minnie&quot;; case 134:return &quot;Molly&quot;; case 135:return &quot;Nancy&quot;; case 136:return &quot;Nelly&quot;; case 137:return &quot;Pam&quot;; case 138:return &quot;Paula&quot;; case 139:return &quot;Ruby&quot;; case 140:return &quot;Sally&quot;; case 141:return &quot;Sandy&quot;; case 142:return &quot;Sarah&quot;; case 143:return &quot;Shirley&quot;; case 144:return &quot;Sue&quot;; case 145:return &quot;Susan&quot;; case 146:return &quot;Tara&quot;; case 147:return &quot;Teresa&quot;; case 148:return &quot;Tina&quot;; case 149:return &quot;Vera&quot;; case 150:return &quot;Vivian&quot;; }}void loaduser(){ mod(&quot;载入数据&quot;); ifstream fin(&quot;data.dll&quot;); string s; if(!(fin&gt;&gt;s)){ cout&lt;&lt;&quot;配置数据未找到。你是第一次玩吗？\\n&quot;;res: cout&lt;&lt;&quot;请输入你的用户名(不支持空格):&quot;; string tmp_in; cin&gt;&gt;tmp_in; user.name=tmp_in; user.coin=200; user.isdead=0; ofstream fout(&quot;data.dll&quot;); fout&lt;&lt;user.name&lt;&lt;endl; fout&lt;&lt;user.coin&lt;&lt;endl; fout&lt;&lt;0; cout&lt;&lt;&quot;角色创建成功!\\n\\n&quot;; cout&lt;&lt;&quot;你的用户名:&quot;&lt;&lt;user.name&lt;&lt;endl; cout&lt;&lt;&quot;你的金币数：&quot;&lt;&lt;user.coin&lt;&lt;endl; }else{ string tmp_username=s; fin&gt;&gt;s; string tmp_coin=s; fin&gt;&gt;s; if(s==&quot;1&quot;){cout&lt;&lt;&quot;这个角色已经死了哎...\\n将创建一个新的\\n&quot;;goto res;} for(int i=0;i&lt;tmp_coin.length();i++){ if(tmp_coin[i]&lt;'0' || tmp_coin[i]&gt;'9'){ cout&lt;&lt;&quot;ERROR: 读取文件时发生错误\\n&quot;; cout&lt;&lt;&quot;系统将自动清除数据并在1秒后重新开始。\\n\\n&quot;; _sleep(1000); goto res; } } istringstream tmpstream(tmp_coin); int coin; tmpstream&gt;&gt;coin; user.coin=coin; user.name=tmp_username; cout&lt;&lt;&quot;你的用户名:&quot;&lt;&lt;user.name&lt;&lt;endl; cout&lt;&lt;&quot;你的金币数：&quot;&lt;&lt;user.coin&lt;&lt;endl;qr: cout&lt;&lt;&quot;是否确认？输入y确认，输入n创建新角色。\\n&quot;; cin&gt;&gt;s; if(s==&quot;n&quot;)goto res; if(s!=&quot;y&quot;){cout&lt;&lt;&quot;错误的输入。\\n&quot;;goto qr;} }}void play(){ srand((unsigned)time(0)); mod(&quot;开始游戏&quot;); cout&lt;&lt;&quot;残酷的规则：\\n&quot; &quot;按编号传枪对自己开枪，你可以选择使用一半且超过300的金币跳过你。\\n&quot; &quot;如果你没跳过，而正好轮到你，那么你就挂了。\\n&quot; &quot;你的所有金币会平均到每个人手上。\\n&quot; &quot;只有游戏里只剩下不到5人时才会结束。\\n&quot; &quot;哈哈哈哈...\\n&quot; &quot;Have fun!\\n\\n\\n&quot;; int *p=liu+1; cout&lt;&lt;&quot;---------\\n参与者名单:\\n&quot;; for(int i=1;i&lt;=playernum;i++){ cout&lt;&lt;&quot;编号：&quot;&lt;&lt;i&lt;&lt;&quot; 名字:&quot;&lt;&lt;player[i].name&lt;&lt;&quot;\\t金币数:&quot;&lt;&lt;player[i].coin; if(i==user.num)cout&lt;&lt;&quot; (You) &quot;; cout&lt;&lt;endl; _sleep(500); } int i=1; int n=0; int numofper=playernum; while(numofper&gt;=5){ int ren=n%playernum+1; if(player[ren].isdead==1){n++;continue;} cout&lt;&lt;&quot;第 &quot;&lt;&lt;i++&lt;&lt;&quot; 轮:\\n&quot;; _sleep(500); cout&lt;&lt;&quot;轮到了 &quot;&lt;&lt;ren&lt;&lt;&quot;号玩家，&quot;&lt;&lt;player[ren].name&lt;&lt;&quot;: \\n &quot;; if(ren!=user.num){ _sleep(1000+rand()%1000); if(rand()%5){ cout&lt;&lt;player[ren].name&lt;&lt;&quot; 选择了开枪。\\n&quot;; _sleep(500); if(*p==1){ cout&lt;&lt;&quot;Boom!&quot;; _sleep(500); player[ren].isdead=true; cout&lt;&lt;player[ren].name&lt;&lt;&quot; 死亡。\\n&quot;; user.coin+=player[ren].coin/numofper; cout&lt;&lt;&quot;你获得了&quot;&lt;&lt;(int)(player[ren].coin/numofper)&lt;&lt;&quot;金币.\\n&quot;; numofper--; cout&lt;&lt;&quot;现在场上还有&quot;&lt;&lt;numofper&lt;&lt;&quot;人\\n&quot;; }else{ cout&lt;&lt;&quot;这枪是空的\\n&quot;&lt;&lt;player[ren].name&lt;&lt;&quot;没事\\n\\n&quot;; } }else{ cout&lt;&lt;player[ren].name&lt;&lt;&quot; 选择了跳过。\\n&quot;; p--; } }else{ if(user.coin&gt;=600){ cout&lt;&lt;&quot;你还有&quot;&lt;&lt;user.coin&lt;&lt;&quot;金币,\\n&quot;; cout&lt;&lt;&quot;花一半金币以躲过吗？(y/n)&quot;; string s;id3: cin&gt;&gt;s; if(s==&quot;n&quot;){ cout&lt;&lt;player[ren].name&lt;&lt;&quot; 选择了开枪。\\n&quot;; _sleep(500); if(*p==1){ cout&lt;&lt;&quot;Boom!&quot;; _sleep(500); user.isdead=true; cout&lt;&lt;player[ren].name&lt;&lt;&quot; 死亡。\\n&quot;; cout&lt;&lt;&quot;\\n\\n\\nYou Lose!!\\n\\n&quot;; ofstream fout(&quot;data.dll&quot;); fout&lt;&lt;user.name&lt;&lt;endl; fout&lt;&lt;user.coin&lt;&lt;endl; fout&lt;&lt;1; return; }else{ cout&lt;&lt;&quot;这枪是空的\\n&quot;; } } if(s==&quot;y&quot;){ cout&lt;&lt;&quot;你躲过了。\\n&quot;; user.coin/=2; p--; } if(s!=&quot;y&quot; &amp;&amp; s!=&quot;n&quot;){cout&lt;&lt;&quot;错误的输入。\\n&quot;;goto id3;} }else{ cout&lt;&lt;player[ren].name&lt;&lt;&quot; 选择了开枪。\\n&quot;; _sleep(500); if(*p==1){ cout&lt;&lt;&quot;Boom!&quot;; _sleep(500); user.isdead=true; cout&lt;&lt;player[ren].name&lt;&lt;&quot; 死亡。\\n&quot;; cout&lt;&lt;&quot;\\n\\n\\nYou Lose!!\\n\\n&quot;; ofstream fout(&quot;data.dll&quot;); fout&lt;&lt;user.name&lt;&lt;endl; fout&lt;&lt;user.coin&lt;&lt;endl; fout&lt;&lt;1; string timenow=getTime(); ofstream newfout(user.name+&quot;的墓碑.txt&quot;); newfout&lt;&lt;&quot;------------------------------\\n&quot;; newfout&lt;&lt;user.name&lt;&lt;endl&lt;&lt;endl; newfout&lt;&lt;&quot;在&quot;&lt;&lt;timenow&lt;&lt;endl; newfout&lt;&lt;&quot;玩俄罗斯轮盘时死亡。\\n&quot;; newfout&lt;&lt;&quot;TA死时还有&quot;&lt;&lt;user.coin&lt;&lt;&quot;金币\\n\\n&quot;; newfout&lt;&lt;&quot;这个故事告诉我们\\n要珍爱生命！\\n&quot;; newfout&lt;&lt;&quot;------------------------------\\n&quot;; return; }else{ cout&lt;&lt;&quot;这枪是空的\\n&quot;; } } } p++; if(p==&amp;liu[gunnum+1]) p=liu+1; n++; cout&lt;&lt;endl; _sleep(1000); } cout&lt;&lt;&quot;本局结束。你有了&quot;&lt;&lt;user.coin&lt;&lt;&quot;金币。\\n&quot;; ofstream fout(&quot;data.dll&quot;); fout&lt;&lt;user.name&lt;&lt;endl; fout&lt;&lt;user.coin&lt;&lt;endl; fout&lt;&lt;0;}int main(){ srand((unsigned)time(0)); string s; mod(&quot;按任意键以开始\\nby:Lhc_fl&quot;); system(&quot;pause&quot;); system(&quot;cls&quot;); loaduser(); system(&quot;pause&quot;); system(&quot;cls&quot;);id5: mod(&quot;配置环节&quot;);id1: cout&lt;&lt;&quot;输入枪容量（范围：6-20）:\\n&quot;; cin&gt;&gt;s; for(int i=0;i&lt;s.length();i++){ if(s[i]&lt;'0' || s[i]&gt;'9'){ cout&lt;&lt;&quot;ERROR: 输入错误,请重试\\n\\n&quot;; goto id1; } } istringstream tmpstream(s); tmpstream&gt;&gt;gunnum; if(gunnum&gt;20 || gunnum&lt;6){ cout&lt;&lt;&quot;ERROR: 输入错误,请重试\\n&quot;; goto id1; }id2: cout&lt;&lt;&quot;输入子弹数（范围：1-5）:\\n&quot;; cin&gt;&gt;s; for(int i=0;i&lt;s.length();i++){ if(s[i]&lt;'0' || s[i]&gt;'9'){ cout&lt;&lt;&quot;ERROR: 输入错误,请重试\\n\\n&quot;; goto id2; } } istringstream tmp2stream(s); tmp2stream&gt;&gt;bulletnum; if(bulletnum&gt;5 || bulletnum&lt;1){ cout&lt;&lt;&quot;ERROR: 输入错误,请重试\\n\\n&quot;; goto id2; } playernum=rand()%gunnum+6; cout&lt;&lt;&quot;分配ing...\\n&quot;; _sleep(1000); user.num=rand()%playernum+1; for(int i=1;i&lt;=bulletnum;i++){ int rndnum=rand()%gunnum+1; liu[rndnum]=1; _sleep(1000); } player=new Player[playernum+1]; for(int i=1;i&lt;=playernum;i++){ if(i==user.num){ player[i].coin=user.coin; player[i].isdead=0; player[i].name=user.name; }else{ player[i].coin=rand()%(user.coin*10)+user.coin; player[i].isdead=0; player[i].name=randname(); } _sleep(1000); } cout&lt;&lt;&quot;分配完成！\\n&quot;; cout&lt;&lt;&quot;以下是一些你的信息：\\n\\n&quot;; cout&lt;&lt;&quot;你的名字:&quot;&lt;&lt;user.name&lt;&lt;endl; _sleep(500); cout&lt;&lt;&quot;你的金币数:&quot;&lt;&lt;user.coin&lt;&lt;endl; _sleep(500); cout&lt;&lt;&quot;你的编号:&quot;&lt;&lt;user.num&lt;&lt;endl; _sleep(500); cout&lt;&lt;&quot;枪子弹数:&quot;&lt;&lt;bulletnum&lt;&lt;endl; _sleep(500); cout&lt;&lt;&quot;总玩家数:&quot;&lt;&lt;playernum&lt;&lt;endl; _sleep(500); cout&lt;&lt;&quot;现在将使用的是一支&quot;&lt;&lt;gunnum&lt;&lt;&quot;可载弹量手枪\\n\\n&quot;&lt;&lt;endl; _sleep(100); system(&quot;pause&quot;); system(&quot;cls&quot;); play(); system(&quot;pause&quot;);id4:if(user.isdead){ return 0; } cout&lt;&lt;&quot;想再玩一局吗？(y/n)&quot;; cin&gt;&gt;s; if(s==&quot;n&quot;){cout&lt;&lt;&quot;Bye!&quot;;} if(s==&quot;y&quot;){ for(int i=1;i&lt;=gunnum;i++){ liu[i]=0; } system(&quot;cls&quot;); goto id5; } if(s!=&quot;y&quot; &amp;&amp; s!=&quot;n&quot;){cout&lt;&lt;&quot;错误的输入。\\n&quot;;goto id4;} system(&quot;pause&quot;); return 0;} 呼。。我真是太菜了。。","link":"/2018/08/29/C%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%A8%8B%E5%BA%8F/"},{"title":"GPG入门使用笔记/教程","text":"本文介绍gpg的简单介绍和使用。 参考： https://www.ruanyifeng.com/blog/2013/07/gpg.html 什么是GPG GNU Privacy Guard（GnuPG 或 GPG）是一个密码学软件，用于加密、签名通信内容及管理非对称密码学的密钥。GnuPG 是自由软件，遵循 IETF 订定的 OpenPGP 技术标准设计，并与 PGP 保持兼容。 GnuPG 是自由软件基金会的 GNU 计划的一部分，曾受德国政府资助。Wikipeida https://zh.wikipedia.org/zh-cn/GnuPG 安装密钥Debian系列： 1sudo apt install gnupg 安装完后，可以执行 1gpg --gen-key 你应该会看到形如: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889gpg (GnuPG) 2.2.27libgcrypt 1.9.4Copyright (C) 2021 Free Software Foundation, Inc.License GNU GPL-3.0-or-later &lt;https://gnu.org/licenses/gpl.html&gt;This is free software: you are free to change and redistribute it.There is NO WARRANTY, to the extent permitted by law.Home: /home/yourname/.gnupg支持的算法：公钥： RSA, ELG, DSA, ECDH, ECDSA, EDDSA密文： IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH, CAMELLIA128, CAMELLIA192, CAMELLIA256散列： SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224压缩： 不压缩, ZIP, ZLIB, BZIP2语法：gpg [options] [files]签名、检查、加密或解密默认的操作依输入数据而定命令： -s, --sign 生成一份签名 --clear-sign 生成一份明文签名 -b, --detach-sign 生成一份分离的签名 -e, --encrypt 加密数据 -c, --symmetric 仅使用对称密文加密 -d, --decrypt 解密数据（默认） --verify 验证签名 -k, --list-keys 列出密钥 --list-signatures 列出密钥和签名 --check-signatures 列出并检查密钥签名 --fingerprint 列出密钥和指纹 -K, --list-secret-keys 列出私钥 --generate-key 生成一个新的密钥对 --quick-generate-key 快速生成一个新的密钥对 --quick-add-uid 快速添加一个新的用户标识 --quick-revoke-uid 快速吊销一个用户标识 --quick-set-expire 快速设置一个过期日期 --full-generate-key 完整功能的密钥对生成 --generate-revocation 生成一份吊销证书 --delete-keys 从公钥钥匙环里删除密钥 --delete-secret-keys 从私钥钥匙环里删除密钥 --quick-sign-key 快速签名一个密钥 --quick-lsign-key 快速本地签名一个密钥 --quick-revoke-sig quickly revoke a key signature --sign-key 签名一个密钥 --lsign-key 本地签名一个密钥 --edit-key 签名或编辑一个密钥 --change-passphrase 更改密码 --export 导出密钥 --send-keys 个密钥导出到一个公钥服务器上 --receive-keys 从公钥服务器上导入密钥 --search-keys 在公钥服务器上搜索密钥 --refresh-keys 从公钥服务器更新所有密钥 --import 导入/合并密钥 --card-status 打印卡片状态 --edit-card 更改卡片上的数据 --change-pin 更改卡片的 PIN --update-trustdb 更新信任数据库 --print-md 打印消息摘要 --server 以服务器模式运行 --tofu-policy VALUE 设置一个密钥的 TOFU 政策选项： -a, --armor 创建 ASCII 字符封装的输出 -r, --recipient USER-ID 为 USER-ID 加密 -u, --local-user USER-ID 使用 USER-ID 来签名或者解密 -z N 设置压缩等级为 N （0 为禁用） --textmode 使用规范的文本模式 -o, --output FILE 写输出到 FILE -v, --verbose 详细模式 -n, --dry-run 不做任何更改 -i, --interactive 覆盖前提示 --openpgp 使用严格的 OpenPGP 行为（请参考手册页以获得所有命令和选项的完整列表）例子： -se -r Bob [file] 为用户 Bob 签名和加密 --clear-sign [file] 创建一个明文签名 --detach-sign [file] 创建一个分离签名 --list-keys [names] 列出密钥 --fingerprint [names] 显示指纹请向 &lt;https://bugs.gnupg.org&gt; 报告程序缺陷。请向 &lt;i18n-zh@googlegroups.com&gt; 邮件列表反映简体中文的翻译问题或建议。 则安装成功。 生成密钥和撤销证书简略版本 1gpg --gen-key 详细版本 1gpg --generate-key 详细版本下，它会按顺序询问你： 123456 请选择您要使用的密钥种类： (1) RSA and RSA (default) (2) DSA and Elgamal (3) DSA (仅用于签名) (4) RSA (仅用于签名) 您的选择？ 第一段是版权声明，然后让用户自己选择加密算法。默认选择第一个选项，表示加密和签名都使用RSA算法。 然后，系统就会问你密钥的长度。 12 RSA 密钥长度应在 1024 位与 4096 位之间。 您想要用多大的密钥尺寸？(3072) 密钥越长越安全，默认是3072位，如欲默认，直接回车即可。 接着，设定密钥的有效期。 12345678 请设定这把密钥的有效期限。 0 = 密钥永不过期 &lt;n&gt; = 密钥在 n 天后过期 &lt;n&gt;w = 密钥在 n 周后过期 &lt;n&gt;m = 密钥在 n 月后过期 &lt;n&gt;y = 密钥在 n 年后过期 密钥的有效期限是？(0) 一般新手上路就选0吧。 系统接下来让你确认。确认后，系统会让你提供个人信息： 1234567您需要一个用户标识来辨识您的密钥；本软件会用真实姓名、注释和电子邮件地址组合成用户标识，如下所示： &quot;Heinrich Heine (Der Dichter) &lt;heinrichh@duesseldorf.de&gt;&quot; 真实姓名： 电子邮件地址： 注释： “真实姓名”一栏不用傻乎乎地真填了，填你的英文名就行。“注释”可以空着。 然后，你的”用户ID”生成了。系统会要求你确定或者修改或者退出。 接着，系统会让你设定一个私钥的密码。这是为了防止误操作，或者系统被侵入时有人擅自动用私钥。 然后，系统就开始生成密钥了，这时会要求你做一些随机的举动，以生成一个随机数。 1我们需要生成大量的随机字节。这个时候您可以多做些琐事(像是敲打键盘、移动鼠标、读写硬盘之类的)，这会让随机数字发生器有更好的机会获得足够的熵数。 很快，系统提示密钥已经生成了。 12gpg: 密钥 xxxxxxxxxxxx 被标记为绝对信任 公钥和私钥已经生成并经签名。 请注意上面的字符串xxxxxxxxxx，这是”用户ID”的Hash字符串，可以用来替代”用户ID”。 这时，最好再生成一张”撤销证书”，以备以后密钥作废时，可以请求外部的公钥服务器撤销你的公钥。 这时，最好再生成一张”撤销证书”，以备以后密钥作废时，可以请求外部的公钥服务器撤销你的公钥。 1gpg --generate-revocation [用户ID] 上面的”用户ID”部分，可以填入你的邮件地址或者Hash字符串（以下同）。 密钥管理列出密钥1gpg --list-keys 也可以 1gpg --list-keys [用户ID] 前者显示结果例子如下： 123456/home/ruanyf/.gnupg/pubring.gpg-------------------------------pub 4096R/EDDD6D76 2013-07-11uid Ruan YiFeng &lt;yifeng.ruan@gmail.com&gt;sub 4096R/3FA69BE4 2013-07-11 第一行显示公钥文件名（pubring.gpg），第二行显示公钥特征（4096位，Hash字符串和生成时间），第三行显示”用户ID”，第四行显示私钥特征。 如果你要从密钥列表中删除某个密钥，可以使用delete-key参数。 1gpg --delete-key [用户ID] 输出密钥公钥文件（.gnupg/pubring.gpg）以二进制形式储存，armor参数可以将其转换为ASCII码显示。 1gpg --armor --output public-key.txt --export [用户ID] “用户ID”指定哪个用户的公钥，output参数指定输出文件名（public-key.txt）。 类似地，export-secret-keys参数可以转换私钥。 1gpg --armor --output private-key.txt --export-secret-keys 上传公钥公钥服务器是网络上专门储存用户公钥的服务器。send-keys参数可以将公钥上传到服务器。 1gpg --send-keys [用户ID] --keyserver hkp://subkeys.pgp.net 使用上面的命令，你的公钥就被传到了服务器subkeys.pgp.net，然后通过交换机制，所有的公钥服务器最终都会包含你的公钥。 由于公钥服务器没有检查机制，任何人都可以用你的名义上传公钥，所以没有办法保证服务器上的公钥的可靠性。通常，你可以在网站上公布一个公钥指纹，让其他人核对下载到的公钥是否为真。fingerprint参数生成公钥指纹。 1gpg --fingerprint [用户ID] 输入密钥除了生成自己的密钥，还需要将他人的公钥或者你的其他密钥输入系统。这时可以使用import参数。 1gpg --import [密钥文件] 为了获得他人的公钥，可以让对方直接发给你，或者到公钥服务器上寻找。 1gpg --keyserver hkp://subkeys.pgp.net --search-keys [用户ID] 正如前面提到的，我们无法保证服务器上的公钥是否可靠，下载后还需要用其他机制验证． 加密和解密加密假定有一个文本文件demo.txt，怎样对它加密呢？ encrypt参数用于加密。 1gpg --recipient [用户ID] --output demo.en.txt --encrypt demo.txt recipient参数指定接收者的公钥，output参数指定加密后的文件名，encrypt参数指定源文件。运行上面的命令后，demo.en.txt就是已加密的文件，可以把它发给对方。 解密对方收到加密文件以后，就用自己的私钥解密。 1gpg --decrypt demo.en.txt --output demo.de.txt decrypt参数指定需要解密的文件，output参数指定解密后生成的文件。运行上面的命令，demo.de.txt就是解密后的文件。 GPG允许省略decrypt参数。 1gpg demo.en.txt 运行上面的命令以后，解密后的文件内容直接显示在标准输出。 签名对文件签名有时，我们不需要加密文件，只需要对文件签名，表示这个文件确实是我本人发出的。sign参数用来签名。 1gpg --sign demo.txt 运行上面的命令后，当前目录下生成demo.txt.gpg文件，这就是签名后的文件。这个文件默认采用二进制储存，如果想生成ASCII码的签名文件，可以使用clearsign参数。 1gpg --clearsign demo.txt 运行上面的命令后 ，当前目录下生成demo.txt.asc文件，后缀名asc表示该文件是ASCII码形式的。 如果想生成单独的签名文件，与文件内容分开存放，可以使用detach-sign参数。 1gpg --detach-sign demo.txt 运行上面的命令后，当前目录下生成一个单独的签名文件demo.txt.sig。该文件是二进制形式的，如果想采用ASCII码形式，要加上armor参数。 1gpg --armor --detach-sign demo.txt 签名+加密上一节的参数，都是只签名不加密。如果想同时签名和加密，可以使用下面的命令。 1gpg --local-user [发信者ID] --recipient [接收者ID] --armor --sign --encrypt demo.txt local-user参数指定用发信者的私钥签名，recipient参数指定用接收者的公钥加密，armor参数表示采用ASCII码形式显示，sign参数表示需要签名，encrypt参数表示指定源文件。 验证签名我们收到别人签名后的文件，需要用对方的公钥验证签名是否为真。verify参数用来验证。 1gpg --verify demo.txt.asc demo.txt 举例来说，openvpn网站就提供每一个下载包的gpg签名文件。你可以根据它的说明，验证这些下载包是否为真。","link":"/2022/07/19/GPG-tutor/"},{"title":"氢氧酸的危害","text":"必须正视氢氧酸(苛性氢)的危害! 氢氧酸是一种无色、无臭、无味的化学物质。可自然产生二零醚、正氧烷、氧乙烯、零醇、氢氧化氢、脱碳甲醛、一氧化二氢、氢化超氧酰、脱氰零醛肟、二聚氢氧酸酐、氢化脱磺硫酸、氧化脱羧乙酸、氢化脱苄苯甲醇、氢化脱硝硝酸、氢化脱氰氰酸、氢碱酸，结构式H-O-H，在一定情况下可电离为H和OH。是酸雨的最主要组成部分，能够引发强烈的各种自然灾害，促进泥石流和山体滑坡，在一定温度下几乎能够对人类所有材料产生不良影响。对电力设备和机械制动装置有着致命的影响。 它每年夺去成千上万人的生命，据不完全统计，由于呼吸道吸入氢氧酸液体而导致的死亡率已经接近万分之一，在人类的非正常死亡中位列前十。然而氢氧酸在健康危害还更多。气态氢氧酸有可能导致严重的灼伤，而长时间不带防护用具处于有固体氢氧酸存在的环境中会引起生物的组织发黑坏死、生理机能失调;若生物体中的氢氧酸含量过多还会引起汗液、尿液过量分泌、恶心、呕吐和具有肿胀感等症状。此外氢氧酸会打乱身体组织液中的电解质固有的平衡状态。氢氧酸不仅在许多疾病组织比如说恶性肿瘤中发现，而且大量的科学事实已经证明，氢氧酸是形成疾病的必要条件。对于使用氢氧酸上瘾的人们来说，没有发现任何手段能够帮助他们摆脱它，戒掉就意味死亡。氢氧酸在环境方面已经造成重大的危害，其具体表现如下:今天的世界，几乎所有的小溪，河流，湖泊和水库均可找到大量的氢氧酸，甚至在南北极冰川中都有这种物质存在。每年由于氢氧酸的过量给人类带来的损失超过百亿美元。尽管它有极端的危险性，但氢氧酸却是现代工业的宠儿，各国政府因为”它能对经济发展作出贡献”而在工业中大量使用这种物质。需要大量消耗这种物质的部分行业有:核能发电和火力发电、化工行业、农药生产 、泡沫塑料、选矿、造纸、皮革鞣制、农药和化肥的施用(值得注意的是这是一种难于完全清除的物质)。 应用:实际上，军事部门一直对氢氧酸的军事用途有着极大的兴趣，军事部门一直在做有关氢氧酸的的提纯和应用实验，并且为了能在战争中控制和利用它，设计出了耗资数亿元的武器装备，所有的大国以及一些想在军事上有着长足发展的国家都在这方面投入了不少人力物力。每个国家的军事部门都有着复杂的系统以获得纯净的氢氧酸，在美国军队中这种物质的储备已经超过万吨。网上资料显示:若生物体中的氢氧酸含量过多会引起汗液、尿液过量分泌、恶心、呕吐和具有肿胀感等症状，此外，氢氧酸会打乱身体组织液中的电解质固有的平衡状态。而对它用上瘾的人们，戒掉就意味死亡。网上资料还明确指出，氢氧酸还是制造泡沫塑料的必用原料。也就是说，人们日常生活中每天都必须和它打交道！ 而人们，也把这种物质俗称为“水”","link":"/2018/10/07/H2O/"},{"title":"2021年全国高中数学联赛游记","text":"欢迎收看：高考生靠竞赛合法逃课之 意外的似乎还行的一场长沙旅行 （注：回答见：https://www.zhihu.com/question/486201973/answer/2116906554） Day -7：班主任兼数学老师石神：我看你也参加了数学羟基 不如你就去数学竞赛吧我（想到可以去长沙打卡茶颜悦色+随便玩一下午电脑）：好呀（x Day -1当然是坐车半天玩半天，晚上打电脑颓废不做作业啦（x 不得不说茶颜悦色确实好喝，下周还喝（ 晚上住进宾馆，感觉还挺舒服的，嘛洗澡头一次面对镜子洗澡感觉非常生草 （但是其实挺好看的）（被打死不过这宾馆其实还好 至少厕所不是透明向床的（恼），不然咱mtf得死（ 文明五征服胜利怎么这么简单（这里难度开很低的屑（跑题喂 Day 1（这里是数学，没有day0！（敲 开始入场，背着n kg的书包彳亍在师大附中的小路上 不愧是长沙 见识到了小城市看不到的黑科技（ 一路去楼上感觉要蒸发了，热热热热热热热，而且到了教室空调对吹差点没把我整感冒 刚进校门那个壮观啊 不愧是数学竞赛 男女比例没个100：1我都不信，不过到了考场发现没那么夸张，但几十比一还是有（ 拿到卷子：草 这不是高考题？开始爆算（ 答案大多和 @某只小朋友 相同（ 骰子情况愣是给咱来了个数少了，想不到想不到 二试拿到就懵了，虽然有心理准备 第三题还是盯了2h 在不懈的努力（指凭自学的数论临场推公式）下分奇偶讨论，居然绕着绕着做出来了，自己看着都无法相信（虽然似乎还是漏了个n=2^k的情况 不知道扣多少 嘛反正也不知道能得多少分） 晚自习想了想，原来还是用了费马小定理的（ 虽然考的时候甚至不知道费马小定理是什么 第一题：？？ （感觉好像知道一点又不知道是什么的鸭子） 一看时间啊30min不管了不管了，骗分最重要~ 开始堆砌自己编的名词什么线性方程什么解 Xn 可填充k维空间内一个k-1维的面偏导是常数哔哩吧啦反正我自己都看不懂，没准能有两分呢（ 至于第二题？没带圆规，不看（耶 然后愉快的下了考场，愉快地被堵在校门口，愉快地迷路（尽管带队老师就在10m外但我瞎） 最后小声bb：茶颜悦色太堵了中午没能买成就回来了，长沙挺方便，下周还来（doge） 还有我明明穿着补佳乐的衣服为什么一个xyn也没钓到（恼 下周化学信息竞赛，再来长沙凑数炮灰鸭（（（ 以及车真的很颠簸 晕车党难受ing 最恶心的是：刚回来周日晚自习还要考石神的数学卷子，分还不一定有联赛高（","link":"/2021/09/12/MAO2021trip/"},{"title":"我是没有用的三轮霞","text":"本文同步发表于知乎 这篇文章与咒术回战无关，单纯想用这句话而已，因为咒回而点进来的可以退了 注意：高强度碎碎念意识流mtf内容警告，gd诱发警告 事情的起因是突然看到了这个 回答，然后心情突然间就打开了 营造的gd，打出来一半却删去的话语，又一次回到了自己脑海里。 忘记自己是怎么样走上这条路了，走得太远以至于觉得一切都非常理所应当，却没有发现风景变换，看到的已经不是来时的春天了。 HRT的天数已经比高考剩余天数还要多，11个月里每次提醒自己写什么记录都会忘记，直到高三悄无声息地来临。日历一天天翻下去，pass什么的徘徊不进，学习也是照常摸鱼。挤出来的时间，也只是溜走，不知觉就过去了。 想起19年的某一天，和信任的同学 （女装子（ 坦白交流了mtf的事情 后来他问我了一句话：是想要依赖在别人身边吗？男孩子也可以依赖别人的。 我当时不知道怎么回答，只知道呆滞了一会儿。或许我那时候真的抱着很幼稚很小孩子的心态吧，因为女生的刻板印象，自己套进自己的蛋壳里，然后逐渐孵化。以至于我后来再看自己那时候的日记，句尾必备的一个“呢”简直有些生理恶心。 “醒悟”过来都已经是快HRT的事情了。终于意识到了刻板印象的负面影响，看多了圈子里喵喵喵的叫声，比较起观察里“所谓原装的女孩子”的生活，慢慢变得极度讨厌mtf的刻板印象。人是会做自己讨厌的人的，有时候甚至会明明知道自己讨厌的就是这种而继续做。我开始“自我纠正”，用男孩子的语气说话，口无遮拦地大骂脏话，用完全与可爱不沾边的步调走路——虽然我本身也不是什么可爱的人，哪怕是从小学“女孩子”的方式走路也只是被说是有一种“优雅的气质”。 而正是那段时间，我反而选择了「糖」。我仿佛刻意叛逆这个周りの人間に決めつけられた思い通りのイメージ，恶意地逃脱“mtf”这个身份而想要证明自己是什么“真正的女孩子”。直到我察觉到自己的偏离，意识到那些“原装的女孩子”也可以喵喵喵可以很可爱，只是一般不会在不熟悉的人面前。 “原装的究竟是原装的啊”，无法摆脱的自卑，哪怕是很好的闺蜜关系也无法拯救的深层次自卑。那些突兀哪怕再精心地掩饰也无法消除，因为自己内心中其实有着过不去的结。说着无所谓啦，其实只是说给自己，想要忘掉那些一切 可是，我是从哪而来呢？ 2021年的元旦便出了柜，后来还告诉了吃糖的事情。为了这些前前后后地思考，自我矛盾地思考，试图解锁一段因为自我疗伤而尘封的记忆。 我发现我不是过去的我，不是未来的我，我只是现在的我。最后那些时候做出的预言除了大方向没有任何意义，就像除了还是知道我潜藏深处无法释怀的gd以外我对自己一无所知。 我是没有用的三轮霞 慢慢地恢复以后，我不喜欢自称妹妹这种事情。我想要承担一份责任，我也想要贡献给我在意的人一部分美好，可是发现，自己果然是没有用啊。 我用坚硬的壳粉饰自己，把自己的感情淡薄到自己也不知道为什么就失去了正常的社会情感能力——虽然不确定是否也曾有过——我毫不介意地愿意做宽容的人，愿意做什么刻板印象下的大姐姐角色。然后最近才突然想起来，所谓姐姐也只是年龄比妹妹大一点而已。只是去不去扮演成熟。 原来我也会酸天赋党，虽然也许不及别人。我也会感到快乐和悲伤，虽然也许波峰比别人迟缓。我也会渴望社交，为一点点的进退而斤斤计较。我很笨拙，但是我也原来只是人。我没有所谓的物种焦虑，在排斥mtf刻板印象地时候早就把猫排除了我的感情之外。原来我只是不想被当做幼稚，所以拼命去幼稚地扮演不幼稚的形象 但是我忘记怎么走来的了，就像孩子忘记自己怎么不知不觉长大。 但是唯一可以说的是，挣扎在社会与现实里后，我最后成就了这个样子，“自己”这个样子。我活着是按自己而活，虽然不知道自己为什么成为自己。所以这一点上，我不会后悔。所以我还会继续前行。 睡吧。 多么散而意识流的东西呀。浪费了你阅读的时间，抱歉呀。","link":"/2021/07/23/I-am-useless/"},{"title":"My First Blog","text":"This is my first blog在2018-08-23用Hexo建立了一个基于GitHub的blog加油! o(*￣▽￣*)ブ","link":"/2018/08/23/My-First-Blog/"},{"title":"NOIP2018爆零记","text":"2018，头一次参加NOIP。身处弱市强省，我自然是要爆零了。 Day-1众位大佬应该是在各种复习各种模拟赛吧，然而身处弱市，我还在上课QAQ Day0下午2:00出发前往长沙。路上跑了4个小时QAQ 复习NOIP有关知识，悔恨为什么参加了提高组（然而已经来不及啦QAQ） 暑假才入门的我参加tg简直是作死啊！ Day1什么时候学习效率最高？对于我这样的蒟蒻，当然是考试时啦！ 就是在考场，我才第一次知道了template这种模板，第一次知道了inline这种骚操作，知道了有cin.tie(0)这种东西…… 没错我看了别人的屏幕 解压密码出现！Fei2Xue@Lian$Tian!“飞雪连天”？看来Day1要凉了 果不其然 T1想到分治，然后一不小心打成暴力QAQ“一不小心”这种神奇情况大概只有我这种蒟蒻才能做出来了 其实分治在极端情况下也可以卡成O(n²),但我只能想出这个了QAQ T2与小凯的疑惑有迷之联系，靠规律骗了30分…… 然后T3没时间看题目了！ 考完后下大雨，与我凉凉的心情无比相称…… 身边dalao1：“T1是原题！”身边dalao2：“是啊，我A掉了。”我：“???”见识太少，居然不知道……（知道了也不会做） 晚上决定放松自我，做道水题，然后老师无良地挑了道蓝题…… 果然没能做出 总的来说，Day1收获挺大的，至少第一次知道了《骗分导论》这货，第一次看到了刘汝佳的《入门经典》（果然我还没入门），第一次学会了C++模板，第一次吃到了一堆夜宵 难得放松啊 Day2爆零+滚粗日记 密码果然是笑书神侠…… 辛辛苦苦写T1，按错一个Ctrl+Z 艹 （我错了我再也不用VSCode等Ctrl+Z是撤销的编辑器了……我再也不以为Vim里Ctrl+Z是撤销了……我再也不写代码不保存了QAQ） 悲剧性浪费1小时，重新开头…… 在还剩1.5小时时过了样例一，然后测样例二才发现 我题看错了?! 专攻样例2，等过了样例2，再看样例1，WA了？ 尝试修改代码…… 段错误 艹 最后30分钟，改好代码，想要测试 来，我删掉注释~（此时不小心按下数字键） 轻轻按下dd~ ？？？！！！ 爆零的泪水流下来 滚回重修Vim 后记此次考试最大的失败就是输在Vim上 QAQ 教训啊","link":"/2018/11/22/NOIP2018/"},{"title":"各种量表收藏（缓慢更新）","text":"警告非自测量表仅供临床使用或阅读、研究参考，无医师指导下的个人请勿擅自使用！ 前言下面列出常见个鬼的心理量表们。 多项测试型：明尼苏达多项人格(MMPI)简介MMPI量表仅供临床使用或阅读、研究参考，无医师指导下的个人请勿擅自使用！算了我知道你们都不会管这句话的，还是粗体警告下 美国明尼苏达大学心理学家哈兹威（S.P.Hathaway）与精神科医生麦今利（J.C.Mckinley）于1940年编制的自我报告式的个性量表。适用年龄：16岁以上。形式包括卡片式、手册式、录音带形式及各种简略式（题目少于399个）、计算机施测方式。既可个别施测，也可团体施测。题量：566（其中有16道重复，实际题量为550）个。编制方法：经验效标法。 链接 才储MMPI测评网站： http://apesk.com/mmpi/ 测试共566题，其中1～399题是与临床量表有关的题目，400～566题与另外一些研究量表有关。施测时间建议：45-90分钟 才储MMPI施测手册：https://www.apesk.com/mmpi/mmpi_manual.asp 网站推荐程度：★★★★☆理由：测试全面，测试完成后可以复制网址给别人看结果。但是566题填写时间实在是……而且网站界面那叫一个复古（不过要求这么多干什么）。测试结果相当专业，无医师指导自行阅读结果不准确！ 症状自评量表-SCL90简介适合自测。 说明：按中国常模结果，如果您的SCL90总分超过160分，单项均分超过2分就应作进一步检查，标准分为大于200分说明你有很明显的心理问题，可求助于心理咨询，大于250分则比较严重，需要作医学上的详细检查，很可能要做针对性的心理治疗或在医生的指导下服药。 （↑其实超过160算个啥啊，正正常常，200都不算多） 链接： (无名网站): http://www.ntneuro.org/scale/scl90.asp网站推荐程度：★★★★☆理由：扣一分是因为如果有漏题，点击提交会告诉你漏了题却不告诉你题号，简直考你视力 才储SCL-90： http://www.apesk.com/SCL90/ 说明：下面有90条测验项目，列出了有些人可能会有的问题，请仔细地阅读每一条，然后根据最近一星期以内， 您的实际感觉，选择适合的答案点击。 网站推荐程度：★★☆☆☆理由：网页测试结果采用的四舍五入计分法，误差太大 MBTI职业性格测试 才储： http://apesk.com/mbti/dati.asp这是多个测试的集合站点，可以自己选择大概像……这样？ 单项测试型下面基本都是来自才储……懒得找了，也懒得写评价了（ 抑郁自评量表(SDS)简介 自评抑郁量表(Self-Rating Depression Scale， SDS)系William W. K. Zung于1965年编制的，为自评量表，用于衡量抑郁状态的轻重程度及其在治疗中的变化。1972年Zung氏增编了与之相应的检查者用本，改自评为他评，称为抑郁状态问卷(Depression StatusInventory，DSI )。评定时间跨度为最近一周。 (↑经验表明，一般结果信不得) 链接 http://www.apesk.com/xinliceshi/start_m/?1460.html 焦虑自评量表(SAS)简介 焦虑自评量表(Self-Rating Anxiety Scale，SAS)由Zung于1971年编制，从量表构造的形式到具体评定的方法，都与抑郁自评量表（SDS）十分相似，它也是一个含有20个项目、分为4级评分的自评量表，用于评出焦虑病人的主观感受。SAS采用4级评分，主要评定项目为所定义的症状出现的频度，其标准为：“1”表示没有或很少有时间有；“2”是小部分时间有；“3”是相当多时间有；“4”是绝大部分或全部时间都有。SAS适用于具有焦虑症状的成年人。同时，它与SDS一样，具有较广泛的适用性。时间范围是“现在或过去一周”。 链接 http://www.apesk.com/xinliceshi/start_m/?1475.html 社交焦虑量表简介 社交焦虑分量表可以用在需要对社交焦虑及其相关间题进行简短的综合性测量时，但采用该量表的研究要记住以下两点：(1)由于量表较短小，其信度较本章中讨论的其它大多数量表要低；(2)量表中的条目内容相当广泛，其评定的情感及行为构成涉及到羞怯、窘迫、寡言及演说焦虑。 就6题你TM认真的吗？？？？ 链接 http://www.apesk.com/xinliceshi/start_m/?1435.html 孤独量表简介 这是一个多维量表，评价孤独者特殊情感的频度与强度。 链接 http://www.apesk.com/xinliceshiNew/start_m/?2.html 哈佛性向测试简介 伟大的灵魂都是雌雄共体的。哈佛大学性别倾向测试帮你来识别。此测验可以测出你的大脑较偏阳性，还是阴性，结果可了解你的大脑是否存有男性荷尔蒙。 性别刻板印象严重，玩玩就好（ 链接 https://types.yuzeli.com/survey/gender30 奇怪的测试们BDSM人格倾向测试简介 BDSM人格倾向测试，懂了吗（ 链接NicoApp: https://inicoapp.com/bdsm/","link":"/2020/03/15/Scales/"},{"title":"Javascript简单弹性碰撞模拟","text":"为什么这么久不更博？因为没时间+懒 效果如下所示～ 为了防止拖慢网页，点开more查看吧～ Your browser does not support the canvas element. \"use strict\"; var c=document.getElementById(\"myCanvas\"); var cxt=c.getContext(\"2d\"); cxt.fillStyle=\"#FF0000\"; var WIDTH = c.width, HEIGHT = c.height; var FPS = 30; var Balls = [] var mouse_var = { mousedown: false, x: 0, y: 0, paused_ballid: 'NaN' } function draw_ball(id) { cxt.beginPath(); cxt.arc(Balls[id].pos.x,Balls[id].pos.y,Balls[id].r,0,Math.PI*2,true); cxt.closePath(); cxt.fill(); } function creat_ball(x,y,r=20,m=1,vx=0,vy=0, e=0) { //创建球 Balls.push({ pos: { x: x, y: y }, // 直角坐标位置 r: r, // 半径 m: m, // 质量 v: { x: vx, y: vy }, //速度（分解后） move: function(){ // 单次移动函数 this.pos.x += this.v.x; this.pos.y += this.v.y; }, e: e, paused: false }); } function clear_screen() { // 清屏 cxt.clearRect(0,0,WIDTH,HEIGHT); } function update() { //更新画布 clear_screen(); for (var ball_id = 0; ball_id < Balls.length; ball_id++) { draw_ball(ball_id); } } function solvefunc(a, b, c) { // 求解二次函数 var delta = Math.sqrt(b*b-4*a*c); return [(-b+delta)/(2*a), (-b-delta)/(2*a)]; } function force(b1, b2, pro) { // b1,b2传入id, pro传入字符串表示属性，例如：force(1,2,\"m\") // 解形如k*q1*q2/R^2的受力 var x = Balls[b1].pos.x - Balls[b2].pos.x; var y = Balls[b1].pos.y - Balls[b2].pos.y; var distance = x*x + y*y; if (dis == 0){ return [0,0]; } var f = Balls[b1][pro] * Balls[b2][pro] / distance; var fx = f / Math.sqrt(distance) * x; var fy = f / Math.sqrt(distance) * y; return [-fx, -fy]; } function dis(p1, p2) { //传入{x:x,y:y} return Math.sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y)); } function hited(b1, b2) { // 是否碰撞 if (b1 >= Balls.length || b2 > Balls.length) return false; var dv_x = Balls[b1].v.x-Balls[b2].v.x; var dv_y = Balls[b1].v.y-Balls[b2].v.y; return (dv_x*dv_x+dv_y*dv_y!=0) && dis(Balls[b1].pos, Balls[b2].pos)","link":"/2020/08/05/PhysicalHit/"},{"title":"Ubuntu wifi问题","text":"联想电脑wifi无法使用，有时只需输入一条命令即可 1sudo modprobe -r ideapad_laptop","link":"/2020/03/26/Ubuntu-WiFi-unable-use/"},{"title":"Python+selenium实现听力表单自动填写","text":"本文介绍的是Python+selenium实现听力表单自动填写。 前言 近期我校发来听力，网上填写，自动排名啊 填完了，发现……诶？我怎么名次这么靠后？ 打开排行榜……？？？满分只要41s就写完了？ 知道了，看来是直接抄答案啊……那么既然你们不乖，我也来吧~ 计算机竞赛中学到的编程技巧，发挥作用啦~ 准备工作chromedriver + python + selenium 配置啥的自己网上找吧，搜索是必备技能来着（ 开工为了实现自动填写表单，首先我们要通过selenium开一个浏览器 1234from selenium import webdriverdriver=webdriver.Chrome()driver.get('https://xxxxxxx') #这里填网站 这些代码可打开一个浏览器窗口 元素定位为了做到填写表单，我们首先需要找到需要填写的元素，比如文本框。 html中，这些元素都有一个id，可以通过检查元素获得 例如，这里的姓名框id就是q1_0 要给文本框发送数据，我们只需要使用send_keys函数 1234name = driver.find_element_by_id(&quot;q1_0&quot;)name.send_keys(&quot;野兽先辈&quot;)classname = driver.find_element_by_id(&quot;q1_1&quot;)classname.send_keys(&quot;114514&quot;) 现在我们运行脚本，发现已经可以自动帮我们填写姓名班级了（为什么这么臭啊喂） 接下来要做的自然是填写答案啦~ 发现答案使用的是单选框式，那么我们照抄网上教程的，发现复选框第i题的第k个选项有规律，id是&quot;q&quot;+str(i+1)+&quot;_&quot;+str(k) 那么，非常好写了， 我们使用click命令~ 1234567answer=&quot;xxBCBABCABAACCBBCACACA&quot; #答案“数组”mp = {}mp[&quot;A&quot;]=&quot;1&quot;mp[&quot;B&quot;]=&quot;2&quot;mp[&quot;C&quot;]=&quot;3&quot;for i in range(2,22): driver.driver.find_element_by_id(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]]).click() 测试，结果发现，什么都没有填~ 诶？明明网上的教程说， 从上例可以看出我们对这种checkbox和radio，可以通过直接点击或者发送空格的方式达到选中或者反选的目的。 看来不行，这里的单选框比较特殊。 靠着自己那1/n桶水的Javascript，我们打开浏览器的console，直接输入script试试 可行！使用这个方法，我们就可以按下这个radio了 修改代码如下 1234567answer=&quot;xxBCBABCABAACCBBCACACA&quot; #答案“数组”mp = {}mp[&quot;A&quot;]=&quot;1&quot;mp[&quot;B&quot;]=&quot;2&quot;mp[&quot;C&quot;]=&quot;3&quot;for i in range(2,22): driver.execute_script(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]] + &quot;.click()&quot;) 通过直接发送script的方法实现选中复选框的目的 测试 诶？明明选中了，为什么还是显示“请选择此项”呢？ 看来还是有问题。继续使用console 看来问题出在这里。q2_3尽管已经click，但是checked还是在false。而手动点击后，发现checked变成了true 那么，直接把checked改成true不就行了？ 实验发现，如果我们把checked改为true，即使“没有选择”它还是没有提示请选择此项 那么，代码就出来了 12345678910answer=&quot;xxBCBABCABAACCBBCACACA&quot;mp = {}mp[&quot;A&quot;]=&quot;1&quot;mp[&quot;B&quot;]=&quot;2&quot;mp[&quot;C&quot;]=&quot;3&quot;for i in range(2,22): driver.execute_script(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]] + &quot;.click()&quot;)#保险起见，没有删除这段代码（其实是懒（划掉））for i in range(2,22): driver.execute_script(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]] + &quot;.checked=true&quot;) 测试，完美！可以了 现在，我们只需要解决这个提交按钮了~ 发现id为ctlNext。那么，对于按钮直接调用click即可。 代码久 等 了 12345678910111213141516171819202122from selenium import webdriverdriver=webdriver.Chrome()driver.get('https://ks.wjx.top/m/xxxxxxxxx.aspx') #和谐啦name = driver.find_element_by_id(&quot;q1_0&quot;)name.send_keys(&quot;野兽先辈&quot;)classname = driver.find_element_by_id(&quot;q1_1&quot;)classname.send_keys(&quot;114514&quot;)answer=&quot;xxBCBABCABAACCBBCACACA&quot;mp = {}mp[&quot;A&quot;]=&quot;1&quot;mp[&quot;B&quot;]=&quot;2&quot;mp[&quot;C&quot;]=&quot;3&quot;for i in range(2,22): driver.execute_script(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]] + &quot;.click()&quot;)for i in range(2,22): driver.execute_script(&quot;q&quot; + str(i) + &quot;_&quot; + mp[answer[i]] + &quot;.checked=true&quot;)driver.execute_script(&quot;ctlNext.click()&quot;) 效果 一次5s，一次10s，解决了20个题目的听力~ 大 胜 利 至于为什么用了5s？selenium需要打开一个chrome浏览器窗口，加载网页的时候自然就慢了。","link":"/2020/02/20/Python-selenium-auto-commit/"},{"title":"已有Ubuntu与Win10，纯命令行VHD装Windows8.1","text":"看文章前啥都别说，先一起大喊：巨硬，巨硬，真**的硬！ 本文同步发在我的知乎上 锦心的电脑上已经安装了Windows 10 [1st], Ubnntu[2nd], Phoenix OS[3rd], 突发奇想决定安装一个VHD Windows8.1，本文纯属记录如何用VHD安装Windows以及拿Grub引导两个Windows系统的过程以及巨硬留下的天坑。 教程同样适用于只有单系统的情况。 数据无价，谨慎操作 材料准备(标*的是必须准备的) [*] Windows 8或更高版本（得有挂载VHD和ISO的功能） [*] Windows 8.1 ISO文件 （或光盘） Linux系统如Ubuntu GParted（Linux软件） VHD 安装 Windows 8.1创建VHD打开Powershell（管理员)，键入diskpart命令进入diskpart： 1PS C:\\WINDOWS\\system32&gt; diskpart 使用cre命令创建一个vhd文件，名称自选其中，maximum是vhd的大小（单位：MB）。创建后VHD为固定大小，因此用时较久 1234567DISKPART&gt; cre vdi file=&quot;D:\\vhds\\win8.vhd&quot; maximum=51200 100 百分比已完成DiskPart 已成功创建虚拟磁盘文件。 连接虚拟磁盘文件，格式化，并分配驱动器号。 123456789101112131415161718192021222324252627282930DISKPART&gt; attachMicrosoft DiskPart 版本 10.0.18362.1VDISK - 连接虚拟磁盘文件。DISKPART&gt; attach vdi 100 百分比已完成DiskPart 已成功连接虚拟磁盘文件。DISKPART&gt; cre par priDiskPart 成功地创建了指定分区。DISKPART&gt; for quick fs=ntfs 100 百分比已完成DiskPart 成功格式化该卷。DISKPART&gt; assDiskPart 成功地分配了驱动器号或装载点。DISKPART&gt; exit退出 DiskPart... 安装Windows 8.1首先把你的Windows安装ISO挂载。如果你是Win8以上直接双击即可。这里ISO被挂载在了E盘。 123PS C:\\WINDOWS\\system32&gt;E:PS E:\\&gt; cd sources 使用dism获取install.wim的信息 12345678910111213PS E:\\sources&gt; dism /get-wiminfo /wimfile:install.wim部署映像服务和管理工具版本: 10.0.18362.900映像的详细信息: install.wim索引: 1名称: Windows 8.1 专业版描述: Windows 8.1 专业版大小: 12,855,928,858 个字节操作成功完成。 安装Windows 8.1其中applydir是你的VHD挂载的盘符（这里是F）， index是你要安装的系统所处于install.wim的索引。 12345678PS E:\\sources&gt; dism /apply-image /imagefile:install.wim /index:1 /applydir:F:部署映像服务和管理工具版本: 10.0.18362.900正在应用映像[==========================100.0%==========================]操作成功完成。 等待，完成后，键入： 12PS E:\\sources&gt; bcdboot f:\\windows -l zh-cn已成功创建启动文件 到此，Windows下的双系统安装宣告完毕，可以重启进入Windows8进行安装了。 注意bcdboot会默认把Windows 8.1作为默认系统，完成安装步骤时还好，要是对此不满了，请win+R运行msconfig把默认OS变为Windows 10 如果看到这里的你没有安装Linux系统，可以直接关闭网页走入了。 Linux修复引导嗯，在此之前的微软还是那个体贴的微软，安装非常方便，然而要是你安装了Linux，巨硬的硬才刚刚开始 重启，熟悉的Windows启动画面出现……Grub引导又没了。 恢复Grub引导巨硬：用了我家的Windows你就是我家的人了，必须得用Windows Boot Manager启动，Grub滚远点！ 进入BIOS，改启动顺序，把Windows Boot Manager调到后面，把ubuntu的Grub改回前面。重启，出现Grub引导界面，OK。 要是没有……请自行百度“ubuntu引导修复” 优化Windows Boot Manager现在出现了一个问题：你用上了Grub，Grub里只有一个Windows Boot Manager, 巨硬又非常贴心地在Windows Boot Manager里自动启动默认系统，启动第二系统需要重启：于是你想启动被放置在非默认系统位置的Windows 8.1需要： 开机 -&gt; Grub选Windows Boot Manager -&gt; 启动默认系统后选择启动Windows 8.1 -&gt; 重启- &gt; Grub再选Windows Boot Manager 我就想开个机您整出3遍选择菜单也太过分了吧？ 分离bootmgfw(以下步骤请确保已经安装完成Windows 8.1) 进入Ubuntu 开启GParted，随意分一个大小260MiB（和你原有的EFI分区一样大就好），格式化为fat32，右键点击管理标识为boot 这里锦心原有的EFI分区为/dev/sda1，新的分区为/dev/sda7，lhcfl是锦心的linux用户名，请自行替换 挂载EFI分区和你的新分区EFI2: 1234lhcfl@lhcfl-Ubuntu-PC:~$ sudo mkdir /media/lhcfl/EFIlhcfl@lhcfl-Ubuntu-PC:~$ sudo mkdir /media/lhcfl/EFI2lhcfl@lhcfl-Ubuntu-PC:~$ sudo mount /dev/sda1 /media/lhcfl/EFIlhcfl@lhcfl-Ubuntu-PC:~$ sudo mount /dev/sda7 /media/lhcfl/EFI2 把EFI分区里的EFI/Microsoft/Boot文件夹保留原格式整个复制到EFI2里。 123lhcfl@lhcfl-Ubuntu-PC:~$ sudo mkdir /media/lhcfl/EFI2/EFIlhcfl@lhcfl-Ubuntu-PC:~$ sudo mkdir /media/lhcfl/EFI2/EFI/Microsoftlhcfl@lhcfl-Ubuntu-PC:~$ sudo cp -r /media/lhcfl/EFI/EFI/Microsoft/Boot /media/lhcfl/EFI2/EFI/Microsoft/Boot 现在你拥有了两份Windows Boot Manager 更改grub首先，umonut掉两个EFI分区 12lhcfl@lhcfl-Ubuntu-PC:~$ sudo umount /dev/sda1lhcfl@lhcfl-Ubuntu-PC:~$ sudo umount /dev/sda7 然后，更新grub 1lhcfl@lhcfl-Ubuntu-PC:~$ sudo update-grub 不出所料的话，你将拥有两个Windows Boot Manager： 12Windows Boot Manager (on /dev/sda1)Windows Boot Manager (on /dev/sda7) 在/boot/grub/grub.cfg里，找到形如这样的内容： 1234567891011menuentry 'Windows Boot Manager (on /dev/sda1)' --class windows --class os $menuentry_id_option 'osprober-efi-48AC-0E64' { insmod part_gpt insmod fat set root='hd0,gpt1' if [ x$feature_platform_search_hint = xy ]; then search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt1 --hint-efi=hd0,gpt1 --hint-baremetal=ahci0,gpt1 48AC-0E64 else search --no-floppy --fs-uuid --set=root 48AC-0E64 fi chainloader /EFI/Microsoft/Boot/bootmgfw.efi} 使用sudo身份强制编辑，把两个Windows Boot Manager换成你想要的名字，如 12Windows 10Windows 8.1 (VHD) 重启，进入Grub界面，进入你的主Windows系统 win+R运行msconfig，在OS中删掉另一个系统。关机。 巨硬这时候就体现了她·无·微·不·至·的关怀，如果你直接重启，恭喜你grub又没了…… 进BIOS把被巨硬放上第一的Windows Boot Manager调到下面。重启。进入另一个系统。 对于下面所有的操作，进入的时候记得时刻关注可能弹出的”即将进行磁盘扫描，x秒内按任意键取消”，并以你最快的速度按任意键取消掉。 你可能因为巨硬的关·怀而多次进入错误的系统，请关机然后进BIOS把不听话的Windows Boot Manager调下去。总之，进入Windows 10就把Windows 8.1的启动项删掉，进入Windows 8.1就把Windows 10的启动项删掉。如果误删了，用bcdboot把引导重建。然后……总是可以调好的…… 后继秀一波我的桌面 Windows 8.1 Windows 7 Ubuntu 20.04 Phoenix OS Windows XP 装巨硬的系统总是让我有种不知道是在装巨硬的系统还是被巨硬的系统装的感觉…… 本文作者锦心，转载请注明出处。","link":"/2020/08/07/VHDwin8install/"},{"title":"编程字体推荐","text":"前言大家都知道编程的时候一个好看的字体是必须的。如果总是看Windows下的Consolas字体会看腻的啦。于是我就来安利一些好看的字体啦(^_^) mononoki这一定是作者最喜欢的字体！Windows下各方面表现得非常好。不管是高分屏还是普通屏幕，表现都十分突出。异次元下介绍mononoki的文章 Monaco这也是一个很好看的字体。只可惜Windows下部分字母表现并不好。 Dejavu Sans Mono","link":"/2018/10/21/codingfont/"},{"title":"discourse-Stelpolva 主题发布！！","text":"（英文）meta.discourse.org上的发布： https://meta.discourse.org/t/theme-stelpolva-a-discourse-rounded-theme-based-on-default-theme/233960 概述Stelpolva 是一个漂亮的圆角主题。配合背景图片使用将使discourse变得如梦似幻。 🛠️ GitHub 仓库 https://github.com/Lhcfl/discourse-Stelpolva ❓ 安装指导 如何安装一个主题或者主题组件 📖 第一次使用Discourse主题？ Beginner’s guide to using Discourse Themes Screenshots 细节这是一个基于默认主题开发的主题。 因此幸运的是，你可以保留您的默认主题调色盘：Stelpolva会自动适配它。 安装作为论坛管理员从Github上安装。 GitHub: https://github.com/Lhcfl/discourse-Stelpolva 如果你想启用全局背景图片，选择分支 testing. 作为普通用户你是论坛的普通用户，不过你也可以享受这个主题——而且你可以自定义背景图片。 安装浏览器插件 Stylushttps://chrome.google.com/webstore/detail/stylus/clngdbkpkpeebahjckkjfobafhncgmnehttps://addons.mozilla.org/firefox/addon/styl-us 在 Stylus 安装主题https://userstyles.world/style/5752(You have to change the domain into your forum) 在css源代码里修改背景图 已知缺陷不一定支持您的扩展和主题组件。","link":"/2022/08/04/discourse-Stelpolva/"},{"title":"滑稽官网","text":"获得成就：用F12复制网站QAQhttps://lhcfl.github.io/huaji 这个网站来自于 http://lvmaojun.com/huaji去掉/huaji后是什么鬼！！ 以下是方法： 访问 http://lvmaojun.com/huaji 按下F12 点击Sources 把图片下下来，把js拷出来 QAQ 传到GitHub 设置Pages 没了 emmmmmmm","link":"/2018/10/05/huaji/"},{"title":"一言","text":"fetch('https://v1.hitokoto.cn') .then(response => response.json()) .then(data => { const hitokoto = document.getElementById('hitokoto_text') hitokoto.href = 'https://hitokoto.cn/?uuid=' + data.uuid hitokoto.innerText = data.hitokoto + \" ——\" + data.from }) .catch(console.error) 这里将会显示一句话 源代码 12345678910&lt;script&gt; fetch('https://v1.hitokoto.cn') .then(response =&gt; response.json()) .then(data =&gt; { const hitokoto = document.getElementById('hitokoto_text') hitokoto.href = 'https://hitokoto.cn/?uuid=' + data.uuid hitokoto.innerText = data.hitokoto + &quot; ——&quot; + data.from }) .catch(console.error)&lt;/script&gt;","link":"/2022/08/04/hitokoto/"},{"title":"Vim学习笔记","text":"Vim的学习笔记 基础按键 按键 作用 什么都不按 普通模式 i 输入模式 Esc 从输入模式退出 ： 命令模式 v 可视模式 ↑ 上 ↓ 下 ← 左 → 右 基础命令普通模式 命令 作用 :open [file] 打开文件 :qa! 强退 :![command] 在shell执行[command]这条命令 :w 保存 :q 退出 :set 设置 :set guifont [font] 设置字体为[font] :set guifont [font]:h[number] 设置字体为[font]，字号为[number] dd 删除整行 [number]dd 删除下[number]行 u 撤销 [number]=[方向键] 向[方向键]方向[number]行自动缩进 r 用你下一个输入的字符替换后面一个字符 可视模式 命令 作用 y 复制 p 粘贴 一个方便的.vimrc123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104set ts=4 &quot;设置tab为4空格set expandtab &quot;用空格替代tabset nocompatible &quot; 关闭 vi 兼容模式syntax on &quot; 自动语法高亮set number &quot; 显示行号set cursorline &quot; 突出显示当前行set ruler &quot; 打开状态栏标尺set shiftwidth=4 &quot; 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4set softtabstop=4 &quot; 使得按退格键时可以一次删掉 4 个空格colorscheme molokaiset nobackup &quot; 覆盖文件时不备份set autochdir &quot; 自动切换当前目录为当前文件所在的目录&quot;filetype plugin indent on &quot; 开启插件set backupcopy=yes &quot; 设置备份时的行为为覆盖set ignorecase smartcase &quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感set nowrapscan &quot; 禁止在搜索到文件两端时重新搜索set incsearch &quot; 输入搜索内容时就显示搜索结果set hlsearch &quot; 搜索时高亮显示被找到的文本set noerrorbells &quot; 关闭错误信息响铃set novisualbell &quot; 关闭使用可视响铃代替呼叫set t_vb= &quot; 置空错误铃声的终端代码set magic &quot; 设置魔术set hidden &quot; 允许在有未保存的修改时切换缓冲区，此时的修改由 vim 负责保存set guioptions-=T &quot; 隐藏工具栏set guioptions-=m &quot; 隐藏菜单栏set smartindent &quot; 开启新行时使用智能自动缩进set backspace=indent,eol,start &quot; 不设定在插入状态无法用退格键和 Delete 键删除回车符set cmdheight=1 &quot; 设定命令行的行数为 1set laststatus=2 &quot; 显示状态栏 (默认值为 1, 无法显示状态栏)set statusline=\\ %&lt;%F[%1*%M%*%n%R%H]%=\\ %y\\ %0(%{&amp;fileformat}\\ %{&amp;encoding}\\ %c:%l/%L%)\\ &quot; 设置在状态行显示的信息&quot;set foldenable &quot; 开始折叠&quot;&quot;set foldmethod=syntax &quot; 设置语法折叠&quot;&quot;set foldcolumn=0 &quot; 设置折叠区域的宽度&quot;&quot;setlocal foldlevel=1 &quot; 设置折叠层数为&quot;&quot;set foldclose=all &quot; 设置为自动关闭折叠 &quot;&quot;inoremap &lt;space&gt; @=((foldclosed(line('.')) &lt; 0) ? 'zc' : 'zo')&lt;CR&gt; &quot; 用空格键来开关折叠set whichwrap+=&lt;,&gt;,[,]inoremap ( ()&lt;LEFT&gt;inoremap { {}&lt;LEFT&gt;inoremap [ []&lt;LEFT&gt;&quot; 插件类快捷键map &lt;c-b&gt; :NERDTreeToggle&lt;CR&gt;inoremap &lt;silent&gt;&lt;expr&gt;&lt;Tab&gt; pumvisible() ? &quot;&lt;C-y&gt;&quot; : coc#pum#visible() ? coc#_select_confirm() : &quot;&lt;Tab&gt;&quot;&quot; Use vim-plug&quot; Plugged Start&quot; Vim-Plug Startcall plug#begin('~/.vim/plugged')Plug 'itchyny/lightline.vim' &quot; lightline插件底部状态栏Plug 'scrooloose/nerdtree' &quot; NERDTreePlug 'Chiel92/vim-autoformat'Plug 'dense-analysis/ale'Plug 'neoclide/coc.nvim'call plug#end()&quot; Vim-Plug End&quot; autocmd VimEnter * NERDTree&quot; Plugged End","link":"/2018/10/07/notesofvim/"},{"title":"随机图片api","text":"（好吧，已经失效了） 看洛谷dalao们签名里有随机图片，很是羡慕。又不喜欢网上搜到的随机图片api里的图，干脆自己写。 于是几经周折，写了个随机图片api… 而且图片还是纯手动下的哦~~ 调用格式: http://xs.miaom.club/randpic 预览：","link":"/2018/10/26/randpicapi/"},{"title":"针对MtF的长发养成指南","text":"转载自自己在某论坛上的文章（鞠躬）删掉了自己的所有图片（鞠躬笔者才疏学浅，而且头发也不很长，多有疏漏，请多指教（鞠躬） 头发相关知识理发术语打薄打薄指的是把你的头发不均匀剪短。例如，抓起一撮头发，剪短它的一半；拉起来一些头发固定住，取下面的头发剪短。 打薄后，你的头发视觉上和梳起来和原来长度一样，但是厚度变薄了。因得名。 优点： 不那么热。 对于头发比较多的人，可以减少头发蓬度 缺点： 打薄后再次打薄可能会导致头发视觉留长速度变慢、形状变奇怪。例如，一次打薄把1/2的头发剪短，那么第二次打薄后，最长的头发只占1/4了。 手感不佳（ 注意事项 打薄一次以后，一年内还是不要打薄第二次了 头发养成速度 https://zhuanlan.zhihu.com/p/22120181根据测定，头发的生长速度是每天0.27-0.4毫米。按此计算，头发一个月大约长1-1.5里面，一年大约是10-20厘米。 发质 一般而言，顺女孩子的头发更有光泽，垂直发质较多。因为细所以留长的话，不仅乌黑，而且看上去有着淡淡的亮色、质感轻柔。但是顺男孩子要是头发长，由于厚重的质感，看上去就会又沉重，又酷热。 男孩子若要把头发留得像女孩子那样，使用染色剂来染发非常见效。若能染成暗淡的茶系色的话，那么头发看上去的质感就可以和女孩子差不多了。染色既可以自己做，也可以上美容院让别人长期帮你做，所以条件宽裕、或者要求较高的人们就去美容院吧。 发质的影响主要有三方面： https://baike.baidu.com/item/%E5%8F%91%E8%B4%A8/4179802第一是外在因素—生活环境，头发生长环境。不要在空气污浊–空气里充满粉尘。油雾的环境中呆得过久。还要注意空气相对湿度、空气温度在25度左右。忽冷忽热，温度反差较大的环境使头发难以适应。使头发失去抵抗力。 第二是自身的原因—头发是属于干性，中性，还是油性。如果偏油性的话只有坚持常洗头了，一天一次为宜。要想改善发质必须进行适当的自我调节，保护头发。选用适合洗发水，护发素。补充维生素B2,B6.多吃水果，多喝水。多参加体育锻炼。 第三是内在因素–心情好坏也会影响。大部分时间调解好自己的心情，保持好的心情，可以使大脑不紧张，从而让头部放松，能更好的给头发一个生长的环境。 其实还有第2.5方面，即【激素】。进行了HRT的MtF很容易发现，自己的出油量大大减少，头发也逐渐变成顺女的有光泽，垂直发质较多、细长。这主要是由于雄激素的减少导致的。如果您不幸不能进行抗雄，一定要记住，每天都好好洗头是一个好办法。 发型 来自《好想做个女孩子》（伪娘养成手册），P20~22，格式有改动 女孩子的发型也有哈莉贝瑞那样的，像男孩子一样的短发。而反过来，男孩子里也有可以盖住耳朵的长度，貌似女孩子的短碎那样的发型，但是由于是男是女一眼便知。所以是不会看错的。 那样的话他们的发型中到底有着什么样的差别呢？到街上去看各类路人吧。男孩子大多都是看上去感觉是“噌”一下的，锐利的帅气发型。而女孩子都是有着松松软软的各种发型的。关键是，发型的外形和相差不大的发长。这二者毫无关系。实际上在剪发的方法上，男女间有着巨大的差异。这里也与第一节所说明过的，男孩子是直线化、女孩子是曲线化的法则相通应。所以让我们分男女依次溯其原因。 一般来说男孩子在做长发发型时，需要做所谓的离子剪的。让上 面的头发短，侧面的头发长的剪法，并多用拿剪刀把头发剪去的那种盘剪。由于这种方法，才可能在保持长发的同时给人以锐利的印象。其要点是剪得看上去帅气。 相反女孩子则以有效地利用头发的垂直度修饰脸型为目的而剪 的。修出让头发顺延着脸部，从头顶到下颚圆圆地笼住的发型。总之就是要剪得漂亮。 像这样长度虽然相同，而发型可以全然不同。所以如果要做一个 用于女装的发型的话，到了美容院，就请直率地说“我要剪个女孩子 的头”吧。如果你做得到这一点，那就尽量要求理发师给你理一个看上去可爱一点的发型。 还有，关于男女发型差异还有前发（刘海）和边发（鬓角）的长 度需要说明一下。 大多数女孩子的刘海，最短也得把眉毛盖住，也有长的能把眼睛 都遮没。 一般来说女孩子会把前发攒起来剪出一个刘海，然后使用喷剂和 发蜡的套装，做一个头发的分路，把头发全部向前放下。这样每天做 发塑。女孩子的发型也有把小额头露出来的，但是男孩子因为眉骨突 出，所以不建议把头发向上扬。 另外，要防止眉骨的突出显眼。刘海分成七三分或六四分都可以， 而哪种分法能够使发型看上去更像女孩子，就尽可能选择那种。 关于边发的长度，特别是在女装的时候。因为考虑到要把脸颊和 下颚的显眼的线条尽量隐蔽，所以为了遮盖颧骨，强烈推荐鬓发留得 比女孩子更长。 刘海的留长和利用鬓发修蔽脸部线条，都利用了一种心理要素， 它会无意识地给人一种“哇，好可爱”、“哇好年轻”的感觉。所以 就算是戴假发的时候，也还是要选择将刘海和鬟发留长哦！ 留长发最重要的事情之一就是要找出一种适合自己的自然发型。 1 当然。现成的类似“这样的人可以用这样的发型”的规则是没有的。但根据脸型不同，各有容易合适的发型： 披肩长发：长发披肩的结果会使得肩宽比较引人注意。除非脸型比较小，肩宽又比较窄的人，最好避免使用太长的假发。 接下来让我们考虑脸型的因素。 虽然人的脸型各有不同，但大致可以分为长脸和圆脸。 脸型比较瘦长的人如果用长发的话，瘦长瘦长组合会使脸显得格外的长。所以如果脸型又瘦又长的人，最好使用不及肩的中到短发。 发色染成了鲜艳的颜色时，如果你的毛发量较大，头发体积会显得更大。所以要适当地打薄一点。 日常生活技巧对付卷发当你的头发留长到一定程度的时候，对付头发发卷就成了必须应付的问题——扎头发、夹头发，睡觉压倒头发都能让你的头发变得卷卷的。不过好消息是，顺女也同样被这些困扰，没什么大不了的。 水当你的头发只是因为不合适的睡姿、洗头发忘记好好吹干而变卷时，水是个很好的办法。 操作流程： 用喷雾器或者湿纸巾把你头发卷起来的部分弄湿。 把湿漉漉的头发弄直、定型。 这段时间内你可以用帽子、夹子等方式约束头发的运动。等头发自然干燥后，头发就不卷了。 优点： 几乎不要钱 对头发没有伤害 无危险 缺点： 对天生卷/烫卷无效。水一干，头发就卷回来了。 夹子适用于不合适的睡姿、洗头发忘记好好吹干而变卷而且你没有足够的时间等水干掉。 操作流程： 对着镜子，把翘起来的头发压下去。 用夹子夹住。 优点： 几乎不要钱。一字夹仅需5块就能买50根。 对头发伤害很小 无危险 缺点： 只能处理一小块区域。 购买直发器如果你的头发实在是卷的不行，可以考虑直发器。直发器的原理和烫发一样，利用电磁原理使发热体产生热量，温度传送到一块版面上，利用高温把头发拉直，一般温度在200度左右。 操作流程： 自己看说明书或者百度 优点： 非常快速方便 缺点： 高温会损伤发质。如果你的头发不是天然就卷，建议不要这样——因为日常生活很可能会让它卷回来 温度过高，容易烫伤 要不少钱 对付头发太长吃进嘴里掉眼睛里落在碗里头发掉到眼睛里你可能需要忍耐一下。对于很多顺女来说，刘海掉到眼睛里再正常不过了。 而剩下两种——当然是夹子啦！ 操作流程： 买个夹子。不要一字夹，要好看的或者朴素的大夹子（一般最便宜也得是5块8个） 把头发理顺，轻轻夹上去，保持稳固。没有经验的，你可以参考周围的女生，她们怎么使用夹子。 如果经常要低头（比如高三狗写作业），这样做几乎不可避免地会让你头发变卷变翘。请做好心理准备。 缺点： 可能让头发变翘。 扎头发虽然理论上说这个应该参考别的女生自己学会，不过我还是教一下。 单马尾（最简单）操作步骤： 把发圈套在一只手上。这只手之后被叫做A手，空的那只叫做B手。 把头发拢起来，这一步可以用梳子。调整高度 用A手去握紧你的头发。 B手钩住A手上的发圈，把它拉出来，A手趁机用力，让头发束从发圈里穿过。B手这时候拧一个圈，反手用两只手指继续握住刚刚的头发束。 A手（现在空了）也像刚刚那样钩住发圈，B手用力，让头发束从发圈里穿过。A手继续拧圈。 重复以上步骤直到足够紧。 如果后脑勺上还有碎发，拢上来，拿夹子夹紧。 注意事项： 多练习，拧的顺序不要搞反了。 不要扎得太紧，会脱发。 丸子（需要很长的头发，至少大于披肩）操作步骤： 把发圈套在一只手上。这只手之后被叫做A手，空的那只叫做B手。 把头发拢起来，这一步可以用梳子。 让头发束紧紧围绕你想要的中心转圈，直到留出大约5cm的头发 像马尾一样扎起来。 留长发时间线本节介绍如何从零开始留头发 For 家长党/不用担心头发被剪党/讨厌理发店党恭喜你！拥有能力对付流言蜚语的你现在可以直接留头发了。 0~2月 从寸头开始进度：0大部分mtf应该都是从这里开始的。当然，这不意味着什么可耻的。女生光头也没什么了不起。在这一个阶段的话，直接往下留就行了，不必要担心什么。如果你不是从寸头开始，可以跳到【从发型开始】部分。 注意事项： 如果可以的话，最好在6月左右开始留。因为在你的头发没有达到能够扎起来的长度时，留长头发在太阳的烘烤下你很容易中暑！ 当然这不代表你就需要剪掉你心爱的头发了。如果不幸赶上最热的时候拥有一个扎不起来的发型——打薄就可以啦！（当然，还是会热） 3~6月 药娘头进度：盖耳朵好的，现在你应该有大约4cm的头发了。mtf的经典发型——药娘头已经出现在你面前。在这个阶段的最末，第一个尴尬期即将来临。 如果你面貌比较pass，从这个阶段起，你被认作女生的概率就开始逐渐增加了。这一阶段仍然是直接往下留，但是要注意开始梳头发了。这一段时间头发还是略有尴尬，但是事实上没有解决的办法。如果你要体验一般短发女生的留长发，请阅读【从发型开始】部分。 药娘头示例： 注意事项： 好好护理你的头发。不然后面你的头发可能会变得很卷（ 洗头发的时候记得用洗发水和护发素。不要让头发变得太油。 大约第6月 尴尬期进度：盖住耳朵多一点这时候你应该有8cm左右的头发了。然而在此之前根本没修剪头发的你，现在终于要尴尬到受不住了在侧面，你的头发大概长这样：半 入 耳 耳 机.jpg 这时候你应该不得不去一趟理发店了。相信我，修剪了更好看（无雾）你必须好好跟tony老师沟通，你可以用以下话语： “剪成这样”（指着图片 “修一下。”“——留多长？”“能多长留多长。” “剪到这里（比划” “剪掉后脑勺这一部分（比划” 从理发店出来以后，如果你的表达得当，你应该已经有一个（伪）女生式短发啦！为什么是（伪）呢？因为只有静止状态是这样。当你运动起来的时候，上面过短的头发会暴露你头发的真实长度。 注意事项： 这一阶段如果不是夏天，最好不要打薄。 一定一定一定要和理发师好好沟通！！！一定不要让他剪太短了！！！ 6~12个月 （伪）女式短发期进度：最下端：盖住耳朵多一点；最上端：大概刚到耳朵。-&gt; 最下端：接近肩膀 最上端：耳朵下面如果天赋不错，这时候你应该已经pass了（直球enjoy it :D这时候你应该有12cm左右的头发了。等到15cm的时候，你就可以剪第二次头发啦！ 注意事项： 好好洗头发 好好梳头发 别让头发卷了 刘海打眼睛可以选择剪掉或者用夹子夹一边去 13个月 尴尬期2这个时候你应该拥有挺长的头发了，但是你会发现，底下的头发怪怪的，和顶上的不搭配是时候剪成妹妹头辣！ 这次你应该已经pass了，直接和tony老师大胆沟通就好： 剪到这个长度（比划 注意事项： 绝对不要让理发师剪得太短，绝对。 不要暴露自己指派性别。 必要的时候强硬一点，要求必须剪到指定长度。 13~16个月：妹妹头进度：大家自己搜搜妹妹头长啥样enjoy it www 注意事项： 去买点发夹子，买点发圈，会有用的。 每天都要好好梳头 别打薄了 刘海遮住眼睛，可以选择中二式留着，也可选择夹子夹一边去。可爱夹子发挥作用了w（ 好好洗头发！好好护发！ 最 好 别 让 头 发 卷 了（实现可能性&lt;10% 好好享受，妹妹头超可爱的！！！！ 18个月以上可以扎起来了。多看看别的女孩子怎么扎头发。如果有关系好的女孩子，可以去玩她们的头发请她们帮你扎头发。 For非家长党/不那么怕理发店党从发型开始首先，你需要作为男生发型忍辱负重，并且说服家长让你留大概这样一个发型： 这个发型的重要特点是：顶部的头发很长因此，等你一有时机，只消4个月，适当修剪下你就能留出妹妹头！（大概吧，没经过验证） 妹妹头之后的部分请参考上文相同部分。 脚注 1: 这部分参考《好想做个女孩子》（伪娘养成手册），P52~53，格式有改动","link":"/2022/08/06/long-hair/"},{"title":"暑假","text":"暑假来了，心情也正常了。 整个人都变死宅了","link":"/2019/07/21/summer-holidays/"},{"title":"Ubuntu deepin-wine配置","text":"为了在Ubuntu使用QQ，折腾了很久，决定写一下自己的经验。 进入deepin-wine配置deepin-wine配置直接输入winecfg是不管用的。正确方法：env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-xxx&quot; deepin-wine winecfg 进入注册表env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-xxx&quot; deepin-wine regedit 把字体设置成微软雅黑其他字体同理：在容器$HOME/.deepinwine/Deepin-xxx内建立zh.reg（名字随意自己替换）输入： 123456789101112131415161718192021REGEDIT4 [HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink]&quot;Lucida Sans Unicode&quot;=&quot;msyh.ttc&quot;&quot;Microsoft Sans Serif&quot;=&quot;msyh.ttc&quot;&quot;MS Sans Serif&quot;=&quot;msyh.ttc&quot;&quot;Tahoma&quot;=&quot;msyh.ttc&quot;&quot;Tahoma Bold&quot;=&quot;msyhbd.ttc&quot;&quot;msyh&quot;=&quot;msyh.ttc&quot;&quot;Arial&quot;=&quot;msyh.ttc&quot;&quot;Arial Unicode MS&quot;=&quot;msyh.ttc&quot;&quot;Arial Black&quot;=&quot;msyh.ttc&quot;&quot;SimSun&quot;=&quot;msyh.ttc&quot;&quot;SimKai&quot;=&quot;msyh.ttc&quot;&quot;SimHei&quot;=&quot;msyh.ttc&quot;&quot;PMingLiU&quot;=&quot;msyh.ttc&quot;&quot;NSimSun&quot;=&quot;msyh.ttc&quot;&quot;Microsoft YaHei&quot;=&quot;msyh.ttc&quot;&quot;Microsoft JhengHei&quot;=&quot;msyh.ttc&quot;&quot;MingLiU&quot;=&quot;msyh.ttc&quot;&quot;MS UI Gothic&quot;=&quot;msyh.ttc&quot; 网上找到微软雅黑字体msyh.ttc、msyhbd.ttc、msyhl.ttc复制到$HOME/.deepinwine/Deepin-xxx/drive_c/windows/Fonts 运行env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-xxx&quot; deepin-wine regedit zh.reg即可 要是不奏效，删掉$HOME/.deepinwine/Deepin-xxx，再来重做一遍 高dpi终端输入env WINEPREFIX=&quot;$HOME/.deepinwine/Deepin-xxx&quot; deepin-wine winecfg，在“显示”中把屏幕分辨率调高。例如（原来96）调成120就是125%缩放 改变Windows版本在winecfg中有“Windows版本”，改之。","link":"/2020/03/26/ubuntu-deepin-wine-config/"},{"title":"科学连接github——v2rayN配置","text":"本文介绍的内容仅供工作和学习使用。依照当地有关法律法规，请勿做出任何违法行为。 背景介绍Project V 是一个工具集合，它可以帮助你打造专属的基础通信网络。Project V 的核心工具称为V2Ray，其主要负责网络协议和功能的实现，与其它 Project V 通信。V2Ray 可以单独运行，也可以和其它工具配合，以提供简便的操作流程。 本站点主要包含了基础的 V2Ray 的配置，以及其它 Project V 相关工具的介绍与链接。 开始去买个自己的服务器或者买个梯子 下载本文的主角v2rayN（自带了v2ray)：https://github.com/2dust/v2rayN作为需要访问github的同学，我相信你有自己安装的能力。 v2ray配置解释自己找： https://toutyrater.github.io/ v2rayN配置解释设置路由主界面的【设置】里点击【路由设置】，你将看到许多规则集。 域名解析策略： AsIs：只使用域名进行路由选择，默认值； IPIfNonMatch：当域名没有匹配任何基于域名的规则时，将域名解析成 IP（A 记录或 AAAA 记录），进行基于 IP 规则的匹配；当一个域名有多个 IP 地址时，会尝试匹配所有的 IP 地址，直到其中一个与某个 IP 规则匹配为止；解析后的 IP 仅在路由选择时起作用，转发的数据包中依然使用原始域名。 IPOnDemand：当匹配时碰到任何基于 IP 的规则，立即将域名解析为 IP 进行匹配。 当多个属性同时指定时，这些属性需要同时满足，才可以使当前规则生效。即 domains 和 ip 规则需要分开使用。 关于geosite的信息，参见 https://github.com/v2fly/domain-list-community 下面对一些规则集做出解释： 绕过大陆123456789101112131415161718192021222324252627282930313233343536373839404142434445[ // 这条规则的意思；对域名(domain) example-example.com 不通过代理直连(direct) { &quot;outboundTag&quot;: &quot;direct&quot;, &quot;domain&quot;: [ &quot;domain:example-example.com&quot;, &quot;domain:example-example2.com&quot; ], &quot;enabled&quot;: true }, // 这条规则的意思：对geosite.dat里定义的广告（category-ads-all）进行拦截（block） { &quot;outboundTag&quot;: &quot;block&quot;, &quot;domain&quot;: [ &quot;geosite:category-ads-all&quot; ], &quot;enabled&quot;: true }, // 这条规则的意思：对geosite.dat里定义的中国网站（geosite:cn）进行直连（direct） { &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;direct&quot;, &quot;domain&quot;: [ &quot;geosite:cn&quot; ], &quot;enabled&quot;: true }, // 这条规则的意思：对geoip.dat里定义的中国网站（geoip:cn）和隐私连接（geoip:private）进行直连（direct） // 坑点：例如github的443端口会被直连，极大降低github连接率 { &quot;outboundTag&quot;: &quot;direct&quot;, &quot;ip&quot;: [ &quot;geoip:private&quot;, &quot;geoip:cn&quot; ], &quot;enabled&quot;: true }, // 这条规则的意思：对上述规则没匹配到的网站进行代理（proxy） { &quot;port&quot;: &quot;0-65535&quot;, &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;enabled&quot;: true }] 黑名单123456789101112131415161718192021222324252627282930313233[ { &quot;outboundTag&quot;: &quot;direct&quot;, &quot;protocol&quot;: [ &quot;bittorrent&quot; ], &quot;enabled&quot;: true }, { &quot;outboundTag&quot;: &quot;block&quot;, &quot;domain&quot;: [ &quot;geosite:category-ads-all&quot; ], &quot;enabled&quot;: true }, { &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;ip&quot;: [ &quot;geoip:telegram&quot; ], &quot;domain&quot;: [ &quot;geosite:gfw&quot;, &quot;geosite:greatfire&quot;, &quot;geosite:tld-!cn&quot; ], &quot;enabled&quot;: true }, { &quot;port&quot;: &quot;0-65535&quot;, &quot;outboundTag&quot;: &quot;direct&quot;, &quot;enabled&quot;: true }] 同上。这条规则的意思大概是，对广告屏蔽，对geosite定义的被GreatFireWall拦截的域名进行代理。剩下的全部网站直连。 全局（global）代理1234567[ { &quot;port&quot;: &quot;0-65535&quot;, &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;enabled&quot;: true }] 意义：对0-65535（即所有端口）全部代理。 全局（global）直连1234567[ { &quot;port&quot;: &quot;0-65535&quot;, &quot;outboundTag&quot;: &quot;direct&quot;, &quot;enabled&quot;: true }] 意义：对0-65535（即所有端口）全部直连。 自定义路由这里推荐几个我自己写的喜欢的方案。 github only这个方案旨在只对工作和学习的常用网站(github, Wikipedia, google)走代理。比起上述方案，由于443端口被代理，github访问变得丝滑流畅。同时，你还可以杜绝自己摸鱼，非常推荐 12345678910111213141516171819202122232425262728[ // 对google，github和wiki走代理 { &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;domain&quot;: [ &quot;geosite:github&quot;, &quot;geosite:google&quot;, &quot;geosite:wikimedia&quot; ], &quot;enabled&quot;: true }, // 屏蔽广告。当然你也可以加入自己想要的域名，完美杜绝自己摸鱼 { &quot;outboundTag&quot;: &quot;block&quot;, &quot;domain&quot;: [ &quot;geosite:category-ads-all&quot; ], &quot;enabled&quot;: true }, // 其他全部直连。 { &quot;port&quot;: &quot;0-65535&quot;, &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;direct&quot;, &quot;enabled&quot;: true }] whitelist added解决绕过大陆时GitHub仍然难以访问的情况。同时，把microsoft、apple等可以直连的网站直连，避免被登陆保护爆杀 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[ { &quot;port&quot;: &quot;0-65535&quot;, &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;domain&quot;: [ &quot;geosite:github&quot; ], &quot;enabled&quot;: true }, { &quot;outboundTag&quot;: &quot;direct&quot;, &quot;domain&quot;: [ &quot;domain:example-example.com&quot;, &quot;domain:example-example2.com&quot; ], &quot;enabled&quot;: true }, { &quot;outboundTag&quot;: &quot;block&quot;, &quot;domain&quot;: [ &quot;geosite:category-ads-all&quot; ], &quot;enabled&quot;: true }, { &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;direct&quot;, &quot;domain&quot;: [ &quot;geosite:cn&quot;, &quot;geosite:adobe&quot;, &quot;geosite:adobe-activation&quot;, &quot;geosite:microsoft&quot;, &quot;geosite:msn&quot;, &quot;geosite:apple&quot; ], &quot;enabled&quot;: true }, { &quot;outboundTag&quot;: &quot;direct&quot;, &quot;ip&quot;: [ &quot;geoip:private&quot;, &quot;geoip:cn&quot; ], &quot;enabled&quot;: true }, { &quot;port&quot;: &quot;0-65535&quot;, &quot;inboundTag&quot;: [], &quot;outboundTag&quot;: &quot;proxy&quot;, &quot;enabled&quot;: true }]","link":"/2022/08/03/v2ray/"},{"title":"Valine评论","text":"在2019/1/28建立了基于Valine的评论 终于有评论了QAQ","link":"/2019/01/28/valine/"},{"title":"科学上网教程","text":"警告，下文内容阅读将加入枪毙名单~ 除非你在18岁以下或者有精神病证明，不会被枪毙，请勿浏览！ 以上内容都是我瞎编的 正文第一步：看到Google!首先你需要下载Chrome浏览器，如何下载请百度~ 然后下载【谷歌访问助手破解版】插件 链接： https://github.com/Lhcfl/PPgoogle-access-helper https://github.com/haotian-wang/google-access-helper 通过以下方法在开发者模式下运行： 1.克隆仓库到本地或下载master.zip后解压(下载方法详见链接内描述) 2.打开Chrome扩展程序管理器 chrome://extensions 3.勾选开发者模式 4.点击加载已解压的扩展程序，选择扩展所在目录 ok，谷歌已经可以访问了……技术含量接近与0。 第二步：科学上网（翻墙）！这一步你需要有Windows10操作系统。 在应用商店里搜索“VPN” 再下载以下软件： HMA!Proxy SGreen VPN Green VPN Node VPN 第一个相当于一个翻墙浏览器。剩下的都是科学上网工具，打开了就可以看youtube等网页了（一次只能打开一个！），可惜有限量…… 技术含量比上一个还低…… 第三步：全网翻墙！如果你是要上pixiv啥的，你会发现，上面的居然上不了？ HMA!Proxy没有图， 其它VPN翻不过？ 你需要Windscribe! 它有10GB每月的免费流量，几乎肯定用不完! (未完待续) 懒，不想更啦……","link":"/2019/05/02/wall/"},{"title":"中南大学湘雅二医院跨性别就诊经历","text":"由于家长毕竟还是想拉我去看看医生，然后挂了湘雅附二周三的号。2021.4.14奔赴长沙.jpg 4：30AM就醒了，然后睡不着觉。最后5：00起床，5:40发车奔赴长沙。大概6:50时到了市区。嗯只有这个时候不会堵车……7:20到达湘雅附二的时候已经有很多人在第一门诊楼排着队了。由于是第一次来，得先买病历本和诊疗卡。这个可以直接在精卫楼买（需要现金）。需要提前挂了号，一般医生都已经被挂满了，当场很难挂到号。我妈帮我挂的是精神科郭文斌医生的号。在六楼大厅等待了一小时后，8:30左右，轮到我了。郭医生：什么情况？我：不认同自己的性别可能比较小声吧，然后郭医生表示没听清，于是我换了个说法，直说感觉有“性别认同障碍”。我妈帮我解释了下情况，说明了我在用药的事。然后主要是问了我多久开始有这种情况的，还在不在上学，有没有别的影响，想不想手术啥的。在病历本上做了记录。之后就郭医生就说：“这个情况不归我管，我这里主要是开药的，你应该去心理门诊”，并向我妈说“要进行心理治疗看能不能好转”emm听到这话心凉了半截，，，都基本上准备好被断糖的准备了。然后就出来，找心理门诊。这里就是，心理门诊这里（也是六楼）也是要提前挂号的，显然号也挂满了hmm总不能回去下周三再跑一次吧。但是幸好遇到一个认识的人，帮我挂到了张小崔医生的号。进去后张医生首先看了看我病历本，基本了解了情况，然后也问了些常见问题就“什么时候开始的”之类。之后我妈进来了。不得不说张医生人超好超友善，帮我向我妈解释说明这个的一些信息。我妈本来基本上已经倾向于我了，只是情感上还希望我有机会能“变回男孩子”。张医生就直接说这个不能变回来了，大多是先天的。跟我妈谈了一会后我妈也基本就同意了。我全程说的话还不超过20句emmmm最后是我妈问能不能开个证明，方便我学校之类的交代，然后张医生就直接给开了，也没做传统艺能mmpi啥的。 开出来的证: 之后张医生说她和她学生有个项目，这里正好想研究跨性别这类人的成因啥的，问我愿不愿意免费做一些检查（当然原因啦！）。然后也只做了个27页的心理量表，主要是看家庭状况，童年特点，社交情况，是否抑郁自残的事。晚上六点半做了个EPR，八点半左右结束了回家。张医生还问我有没有知道些这个群体的其他人啥的，甚至跟我说可以推荐同类来她这里诊疗…… 感受： 这两位医生都很很很很很很友善（郭医生就语气很平淡很和蔼qwq） 家长党是个很大加分点，好的话甚至自己不用说太多就能开出来。如果不是家长党感觉医生也会很难办，大概率也是开不了的。 打扮最好尽力pass点，女性化打扮最好，医生感受比较直观 不要刷mmpi甚至不要做任何检查（比如脑核磁啥的）就能过感觉有点草率……不过反正之后也要去别的医院的，这里最好只是图个方便（毕竟同省……） 最好没啥别的病比如抑郁啥的。这个也是会问到的 要提前挂号！要提前挂号！要提前挂号！ 自己完全没有心理预期但是刷到证了这点真的喜悦hmmmm 原来湖南也能开证了啊x 嗯不知道这个证能拿来干什么，至少正规医疗就诊是算得上的了。不过反正我家长没断我糖，hrt处方暂时不需要，这个备用+安抚父母情绪（？）挺有用的（（","link":"/2021/04/16/%E4%B8%AD%E5%8D%97%E5%A4%A7%E5%AD%A6%E6%B9%98%E9%9B%85%E4%BA%8C%E5%8C%BB%E9%99%A2%E6%B8%B8%E8%AE%B0/"},{"title":"一些OI界的梗","text":"总结了一些OI界的梗/笑话，多图预警!图片失效了，也许是洛谷站外访问限制吧。 26个字母的百分比如果令A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 分别等于1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 那么 Hard work （努力工作） H+A+R+D+W+O+R+K＝8+1+18+4+23+15+18+11=98% Knowledge （知识） K+N+O+W+L+E+D+G+E＝11+14+15+23+12+5+4+7+5=96% 咦？勤奋和知识分别只占98%与96%呀！ Love （爱情） L+O+V+E＝12+15+22+5=54% Luck （好运） L+U+C+K＝12+21+3+11=47% 看出来没？ 这些我们通常认为重要的东西往往并不是最重要的。 那么，什么可以生活得圆满？ 是Money （金钱）吗? … 不! M+O+N+E+Y=13+15+14+5+25=72% 是Leadership （领导能力）吗? … 不! L+E+A+D+E+R+S+H+I+P=12+5+1+4+5+18+19+9+16=89% 金钱，权力都不能使圆满， 什么能使我们的生活变成100%的圆满呢？ 其实，真正能使我们生活圆满的东西就在我们的代码里！ iostream（输入输出流) I+O+S+T+E+A+M=9+15+19+20+18+5+1+13=100% 所以，认真打代码吧（^-^） update：某dalao找到了一个新的 毛主席(Maozedong) M+A+O+Z+E+D+O+N+G=13+1+15+26+5+4+15+14+7=100% 咳咳！ emmm下面这图有bug啊…你从哪里找一个30岁的OIer? AC：Answer Coarse——粗劣的答案 WA：Wonderful Answer——好答案 RE：Run Excellently——完美运行 TLE：Time Limit Enough——时间低于限制 MLE：Memory Limit Enough——内存低于限制 OLE：Output Limit Enough——输出低于限制 CE：Complie Easily——轻松编译 PC：Plenitude Correct——完全正确! End","link":"/2018/08/27/%E4%B8%80%E4%BA%9BOI%E7%95%8C%E7%9A%84%E6%A2%97/"},{"title":"悬垂线方程推导","text":"本文同步至知乎。 晚自习无聊的结果（（ 其实之前已经推过一遍了不过手稿没在这里又忘记了过程所以再推了一遍 事情的契机大概是想知道悬垂线的方程为什么是y=coshx，于是尝试，学考时花了一小时推由于某个积分背不得无果 这次恰好凑出这个积分了，所以独立推了出来，感觉兴奋要上天了 下面过程： 首先，设 处到 处悬垂线长度为 ,绳子质量线密度为 ,重力加速度为 有关系： 取一节绳微元思考：（图片丑见谅） 对绳微元长度有以下关系： 设斜率k， 受力分析+几何关系，知： 因此我们推出： 为有量纲常数 再联立第一二个式子，得到 积分得 由题设我们知道， ，代入得到 即 对y积分， 发现， 故， 所求即解。","link":"/2021/08/04/%E6%82%AC%E5%9E%82%E7%BA%BF%E6%96%B9%E7%A8%8B%E6%8E%A8%E5%AF%BC/"},{"title":"用GitHub建立自己的博客","text":"搭建这个网站失败了几次后终于成功了。于是决定把步骤和注意事项写下来，纪念一下。 由于这个教程是完全面向一点准备都没有的人，因此，可能遇到已经做过了的，请自行跳过。 注意，安装Git后全程请不要关闭Git Bash 所需工具： 一台电脑 （废话） 有自己的GitHub账户 Git Node.js Hexo 1. 准备工作 建立一个GitHub账户 访问GitHub,由于是外国网站，可能有一点慢。 在网站上输入注册信息，点击Sign up for GitHub，按提示完成注册 注册完成后，在欢迎页面点击“Start a project”以新建一个存储库 在页面中把存储库名字命名为 你的名字.github.io ，其中“你的名字”为你的用户名。像我，就是Lhcfl.github.io Github这里的步骤完成了！ 如果你想要自己制作一个网页，可以上传你自己制作的index.html。 以下部分为不会自己做网页的人准备。 ⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇⬇ 安装Git 下载链接：https://git-scm.com/downloads 点击“windows”即可 由于git是国外网站，很容易下载失败，也可以到我的百度网盘下载。链接 安装即可。 按Win+R，在“运行”框里输入cmd打开命令提示符 输入git --version，如果显示了版本号即成功 （如果没有，可能是没有添加到Path，请自行百度“Git添加到Path”） 安装Node.js 下载链接：https://nodejs.org/zh-cn/ (请下载长期支持版) 安装 按Win+R，在“运行”框里输入cmd打开命令提示符 输入node -v，如果显示了版本号即成功 安装Hexo 按Win+R，在“运行”框里输入cmd打开命令提示符 输入npm install -g hexo-cli,回车 等安装完成后，输入hexo -v, 如果显示了版本号即成功。 2. 创建博客 在你喜欢的地方建立一个文件夹，可以叫Blog 鼠标右键B，点击Git Bash Here 输入hexo init,回车. 输入npm install,回车. 输入hexo g,回车. 这个命令是部署你的Blog。默认生成一个叫“Hello,world”的博客 输入hexo s,回车. 这个命令是把生成的网页放在本机服务器上，进入 http://localhost:4000/ 就可以预览成果。 看完以后，回到Git Bash，按Ctrl+C退出，这时 http://localhost:4000/ 不再可以访问。 3. 发布一篇博客 在Git Bash里输入hexo new &quot;博客名&quot;,博客名可以改成任意的，但是要加英文引号。 在blog\\source_posts 路径下，会有一个 博客名.md 的文件。 编辑这个文件，然后保存。 回到 Git Bash，输入 hexo g 输入 hexo s,进入 http://localhost:4000/ 预览成果。按Ctrl+C退出 12345678编辑时注意事项：文件里会有以下几行，不要删除！---title: 博客名date: XXXX-YY-ZZtags:---（title后面是博客标题，date后面的是日期） 4. 博客配置 用户设置 打开blog\\_config.yml 找到 # Site，添加博客名称，作者名字等。 1234567891011121314151617181920212223说明：你会看到以下几行：title: subtitle: description:keywords:author: language: timezone:修改时，在对应行后面加入你的东西，如：title: 我的网页标题注意，冒号后面有一个英文空格。修改不同地方有不同意义。title后面加网页标题subtitle后面加副标题description后面加网页描述author后面加作者名字language后面加皮肤语言timezone建议不要修改！keywords作者还不知道什么意思QAQ 找到 # URL, 填入 你的网页url。比如 url: https://lhcfl.github.io github上传配置 获取 Github 对应的 Repository 的链接。 登陆 Github，进入到你所建立的那个存储库，点击 Clone or download 复制 URL 待用 修改博客的配置文件。 打开配置文件 blog\\_config.yml 找到 #Deployment，填入以下内容： 1234deploy: type: git repository: 你的URL branch: master 你的URL里面填你复制的那个地址。 回到 Git Bash 输入 npm install hexo-deployer-git --save 以安装 hexo-deployer-git (此步骤只需要做一次。) 5. 网页部署到GitHub 回到Git Bash，输入 hexo d得到 INFO Deploy done: git 即为部署成功 结果 到 你的用户名.github.io 查看即可。这时别人已经可以使用这个域名访问你的博客了。 6. 主题 Hexo主题仓库 这里，我们以主题Anatole为例子。许多Hexo的主题设置可能需要一定的额外设置。 操作方法： 回到Git Bash，输入git clone https://github.com/Ben02/hexo-theme-Anatole themes/Anatole 如果是别的主题，输入git clone 主题的GitHub链接 themes/主题的名字 打开 blog\\_config.yml 找到 theme: 把 Hexo 默认的主题 lanscape 修改成主题名，这里是 Anatole。 即 theme: Anatole 汉化： 找到 # Site, 在language: 后面写zh-cn,即language: zh-cn 如果是别的主题，可以打开blog\\themes\\主题名\\languages，里面的.yml文件就是语言文件。中文一般是叫zh-cn或zh-hans 复制中文配置的无后缀名的文件名，填到# Site的language: 后面就行了。 安装支持包 回到Git Bash，输入npm install --save hexo-render-pug 如果是别的主题，先输入npm install --save hexo-render-，不要回车，再打开blog\\themes\\主题名\\layout,看到什么后缀名就接着输入什么。 例如，npm install --save hexo-render-ejs。 （不知道后缀名是什么？请自行百度一下） 修改图标。进入blog\\themes\\Anatole\\source\\images, 里面有三个文件。 favicon.png是网页的图标。 logo.png和logo@2x.png是你的头像。 如果觉得想要修改，替换成自己的就行了 添加about页和links页 在blog\\source下建立两个文件夹，分别叫做about和links 在这两个文件夹下各创建一个index.md 按文档的方式编辑保存即可 测试。回到 Git Bash，输入 hexo g，回车后输入 hexo s,进入 http://localhost:4000/ 预览成果。按Ctrl+C退出 如果在Git Bash输入了hexo g和hexo s后，预览后图标没变，请输入hexo clean并重试。 作者：Lhc_fl欢迎转载，注明出处 相关链接： Hexo主题 https://hexo.io/themes/ Hexo文档 https://hexo.io/zh-cn/docs/ Anatole主题Wiki: https://github.com/Ben02/hexo-theme-Anatole/wiki","link":"/2018/08/24/%E7%94%A8GitHub%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"},{"title":"又是碎碎念","text":"这几天交commits跟着了迷一样……4天内超过4年交的commit总数。 谁他妈能想到这一切的开端是我最看重的，当做家一样的论坛被墙了。 对，于是被逼上梯子。为了不浪费钱，我开始写代码传github，twi看人涩涩键政发日常。自从GitHub被墙起，我灰掉好多个月的commit板子意外的开始见了绿。 现在论坛恢复了自由访问，我却离不开梯子了。因为传github巨难。什么讽刺。","link":"/2022/08/04/%E5%8F%88%E6%98%AF%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"title":"散记2022-08-25","text":"12# 散文，在limelight原创发布# 本文不采用CC-BY-SA，作者完全保留著作权。 「想要变得值得被爱」不得不说，这是最糟糕的成为mtf的理由了，而且频率真的不低。抱着这样想法的人，大抵是自小对「女孩子的生活」有一种不切实际的幻想的吧。事实上我见过很多mtf，是为了在社群中被接纳、被爱、被包容而选择了成为mtf。所以我非常想对每一位mtf或者想要成为mtf的人说，请三四而后行。 但是我并不反对你给自己打一个mtf的tag。或者说，我比较支持的是你可以随时认真决定自己是不是mtf。因为这是你可以进行的深思的一部分。至于所谓的「随时认真决定」是什么呢？我的想法是：你可以随时做出这样的决定，但是做出了这样的决定后就轻易不要更改。你可以给自己一个时间，在网络上去认真体会自己完全是另一个性别时，到底能给自己带来什么。某种意义上，这也就是不能RLE的情况下的一种「网络RLE」。 任何「劝退」的产生，都是基于一种跨性别是「有害的」这样的认知。这里所说的「有害」，可以是精神上的，也可以是生理上的。由于可能造成无法逆转的影响和身体损伤，通常而言，对HRT的「劝退」还是比较有其存在的意义的，但是单纯当一个跨性别者，这是没必要劝退的，因为它完全没有「害处」。即使有，也总是和社会的压迫挂钩，即担心你成为家暴党、担心你被送进矫正学校，担心你受到社会的偏见这样的。如果只是在网络上宣称自己是mtf，或者单纯用一个小号自称是女性，有什么坏处呢？ 一旦自我意识开始觉醒，你总是要经历探索自己的步骤的。「人非生而知之者，孰能无惑？」惑而不思，其终为惑矣。为了解决笼罩在自己头上的疑惑，你通常只有两个办法：经过无数分析自己用理论描述出自己，和试错。 如果你能保证自己能够精准描述出自己，那我没有什么可以额外说的，并对你感到钦佩。这里只说试错。 试错是（尤其在古代）解决自己的问题的最好方法。我们经常听到故事说，苏洵年二十七突然发奋，「愤然将这批旧稿，一把火烧个干净」什么的。甚至还有离谱的，姜太公70岁了还什么都干不好，突然间就被周王赏识。整体而言，这也是人类最正确的探索方法。但是现代社会有一个很明显的问题：试错代价变高。忘了这是在哪里看到的观点，好像就是在ll吧。甚至数十年前，中国还是遍地黄金的，只要你肯干，很容易获得一个稳定的生存条件。但现在，越来越高的试错成本和越来越高的期望值不再容许你犯错。这甚至与性别无关。一个典型的例子，你18岁前的一生都只为了高考而奋斗，前面错一步就会掉出这个台阶。整个社会拼命地让你满足社会期望的约束，不允许有任何个性的声音，并美其名曰为了你好。在现代，你几乎不可能让自己30岁了还没决定好职业，更别提70岁了还想获得提拔。人人都说，你少考一分就会在不同的档次。为了适应这种变化，一个好的方式是互联网试错。当然，这不代表你拥有一个肆意妄为的沙盒，你永远不知道你说的话会不会10年后被翻出来上纲上线。但是相比现实生活，互联网试错代表着没有巨大的、笼罩式的影响，你至少基本不用担心你在互联网上扮演一只猴子会有人真的跑来把你送进马戏团。 讲这么一些，目的在于告诉大家，如果你对自己的mtf倾向有所怀疑，不妨把自己全身心代入进去试一试（并不是说随意HRT）。笔者在这方面是一个比较谨慎的人，在首次察觉mtf倾向的时候，依照DSM-5标准开始计时，并且直到6个月后才开始以mtf自居。HRT方面更是在等待两年之久后才进行。因此，在这段比较长的时间中我得以给自己提出了许许多多的问题： 你为什么觉得自己是女生？ “女生”与“男生”有什么不同吗？ 你是否对每项事情所导致的收益和代价有了清晰的认识？ 你如何保障自己在进一步的实验中不会后悔？ …… 犹记当年开始认为自己有mtf倾向的时候。一个和我关系颇好的女装子质问我，你为什么要成为女生？是想要被别人关爱吗？ 我当时哑口无言。我当时没有足够清晰的想过这个问题。所以我花了很长时间思考这些，建构、解构。现在我可以回答他了：因为我想要这样做。这样做令我感到舒适。感到舒适并不需要很多的理由。你可以喜欢西红柿，你也可以不喜欢西红柿。这单纯地取决于你是否认为好吃，你认为好吃是不需要理由的。 当然这不是一个很好的答案，但是是我可以直接给出的答案。你可以深层次的去思考我凭什么觉得好吃，但是我拒绝：好吃不需要理由。而且哪天觉得不好吃了，不吃就可以，这并不妨碍我过去觉得它好吃，并且喜欢天天吃。 回到原题。我希望的是，任何人choose自己是什么人，甚至决定把tag贴到自己身上的时候的，最好思考一下你为什么想要这个tag。如果你无法思考出这个的答案，也并不意味着需要呆着不动，可以勇敢的把自己模拟成那个样子，再真实地去感受——当然这一切建立在你不会真的损伤身体的情况下。不过事实上，如果你做了足够的利益分析，并且觉得身体损伤是可接受的，即使是所谓尝试性HRT也是可以的。 唯独不应该的是，因为对一个群体的不切实际的幻想而来，然后把自己永远沉醉在美好的幻想里，埋怨自己做不到这些。所有人都不是天生拥有光。","link":"/2022/08/26/san-mtf-confuse/"},{"title":"C++11与lambda","text":"废话不说，直接上定义： 1[capture](params) -&gt; ret {something;} 其中 capture 是捕获列表，params 是参数表，opt 是函数选项，ret 是返回值类型，something是函数体。 二话不讲，上个例子： 12auto f = [](int a) -&gt; int { return a + 1; };std::cout &lt;&lt; f(1) &lt;&lt; std::endl; // 输出: 2 显然嘛，C++11嘛，类型推导比较简单，所以稍微简化一下： 12auto f = [](int a){ return a + 1; };std::cout &lt;&lt; f(1) &lt;&lt; std::endl; // 输出: 2 那要是没参数，写[](){return x;}不是怪怪的嘛，所以括号也省了吧 12auto pi = []{ return 3.1415926535; };std::cout &lt;&lt; pi() &lt;&lt; std::endl; // 输出: 3.1415926535 好，那啥事lambda捕获列表呢？ lambda 表达式可以通过捕获列表捕获一定范围内的变量： [] 不捕获任何变量。 [&amp;] 捕获外部作用域中所有变量，并作为引用在函数体中使用（按引用捕获）。 [=] 捕获外部作用域中所有变量，并作为副本在函数体中使用（按值捕获）。 [=，&amp;foo] 按值捕获外部作用域中所有变量，并按引用捕获 foo 变量。 [bar] 按值捕获 bar 变量，同时不捕获其他变量。 [this] 捕获当前类中的 this 指针，让 lambda 表达式拥有和当前类成员函数同样的访问权限。如果已经使用了 &amp; 或者 =，就默认添加此选项。捕获 this 的目的是可以在 lamda 中使用当前类的成员函数和成员变量。 好，上例子： 1234567891011121314151617181920212223class A{ public: int i_ = 0; void func(int x, int y) { auto x1 = []{ return i_; }; // error，没有捕获外部变量 auto x2 = [=]{ return i_ + x + y; }; // OK，捕获所有外部变量 auto x3 = [&amp;]{ return i_ + x + y; }; // OK，捕获所有外部变量 auto x4 = [this]{ return i_; }; // OK，捕获this指针 auto x5 = [this]{ return i_ + x + y; }; // error，没有捕获x、y auto x6 = [this, x, y]{ return i_ + x + y; }; // OK，捕获this指针、x、y auto x7 = [this]{ return i_++; }; // OK，捕获this指针，并修改成员的值 }};int a = 0, b = 1;auto f1 = []{ return a; }; // error，没有捕获外部变量auto f2 = [&amp;]{ return a++; }; // OK，捕获所有外部变量，并对a执行自加运算auto f3 = [=]{ return a; }; // OK，捕获所有外部变量，并返回aauto f4 = [=]{ return a++; }; // error，a是以复制方式捕获的，无法修改auto f5 = [a]{ return a + b; }; // error，没有捕获变量bauto f6 = [a, &amp;b]{ return a + (b++); }; // OK，捕获a和b的引用，并对b做自加运算auto f7 = [=, &amp;b]{ return a + (b++); }; // OK，捕获所有外部变量和b的引用，并对b做自加运算 另外要记得捕获是瞬间完成的 1234int a = 0;auto f = [=]{ return a; }; // 按值捕获外部变量a += 1; // a被修改了std::cout &lt;&lt; f() &lt;&lt; std::endl; // 输出0 那么如果希望去修改按值捕获的外部变量应当怎么办呢？这时，需要显式指明 lambda 表达式为 mutable： 123int a = 0;auto f1 = [=]{ return a++; }; // error，修改按值捕获的外部变量auto f2 = [=]() mutable { return a++; }; // OK，mutable 需要注意的一点是，被 mutable 修饰的 lambda 表达式就算没有参数也要写明参数列表。 最后，介绍一下 lambda 表达式的类型。 lambda 表达式的类型在 C++11 中被称为“闭包类型（Closure Type）”。它是一个特殊的，匿名的非 nunion 的类类型。 因此，我们可以认为它是一个带有 operator() 的类，即仿函数。因此，我们可以使用 std::function 和 std::bind 来存储和操作 lambda 表达式： 12std::function&lt;int(int)&gt; f1 = [](int a){ return a; };std::function&lt;int(void)&gt; f2 = std::bind([](int a){ return a; }, 123); 另外，对于没有捕获任何变量的 lambda 表达式，还可以被转换成一个普通的函数指针： 123using func_t = int(*)(int);func_t f = [](int a){ return a; };f(123); lambda 表达式可以说是就地定义仿函数闭包的“语法糖”。它的捕获列表捕获住的任何外部变量，最终均会变为闭包类型的成员变量。而一个使用了成员变量的类的 operator()，如果能直接被转换为普通的函数指针，那么 lambda 表达式本身的 this 指针就丢失掉了。而没有捕获任何外部变量的 lambda 表达式则不存在这个问题。 这里也可以很自然地解释为何按值捕获无法修改捕获的外部变量。因为按照 C++ 标准，lambda 表达式的 operator() 默认是 const 的。一个 const 成员函数是无法修改成员变量的值的。而 mutable 的作用，就在于取消 operator() 的 const。 需要注意的是，没有捕获变量的 lambda 表达式可以直接转换为函数指针，而捕获变量的 lambda 表达式则不能转换为函数指针。看看下面的代码： 123typedef void(*Ptr)(int*);Ptr p = [](int* p){delete p;}; // 正确，没有状态的lambda（没有捕获）的lambda表达式可以直接转换为函数指针Ptr p1 = [&amp;](int* p){delete p;}; // 错误，有状态的lambda不能直接转换为函数指针 上面第二行代码能编译通过，而第三行代码不能编译通过，因为第三行的代码捕获了变量，不能直接转换为函数指针。","link":"/2022/09/02/lambda-in-cpp/"},{"title":"关于UWP和windows代理的水火不容","text":"科学上网的时候一直苦于UWP应用的疯狂报错。不得不舍弃好看好用的UWP版邮件，悲。直到那一天——突然间，知道了loopback这东西。 为了安全，巨硬在UWP应用中打开了Loopback，禁止它们访问localhost，因此各类代理软件纷纷中招。 解决办法就是对特定应用解除锁定了。例如：打开【邮件】的loopback限制，需要分别打开以下应用的： microsoft.windows.authhost.a_8wekyb3d8bbwe 电子邮件和帐户 邮件和日历 然后就可以愉快的发邮件辣！","link":"/2022/09/05/%E5%85%B3%E4%BA%8EUWP%E5%92%8Cwindows%E4%BB%A3%E7%90%86%E7%9A%84%E6%B0%B4%E7%81%AB%E4%B8%8D%E5%AE%B9/"},{"title":"远行，前往远方","text":"第一次将要长期离开家乡。心中说不出的复杂。","link":"/2022/09/09/Firstly-far-away/"},{"title":"【笔记】C++的base64加密/解密程序","text":"123456789101112131415161718192021222324252627282930namespace base64 { const char* list = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;; char* get_back() { char* tmp = new char[256]; for (int i = 0; i &lt; 64; i++) tmp[list[i]] = i; return tmp; } string encode(const string &amp;str) { string ret = &quot;&quot;; for (int p = 0; p &lt; str.length(); p += 3) { unsigned int tmp = ((unsigned int)((unsigned char)str[p])&lt;&lt;16) | ((p+1 &gt;= str.length() ? 0 : (unsigned int)((unsigned char)str[p+1]))&lt;&lt;8) | (p+2 &gt;= str.length() ? 0 : (unsigned char)str[p+2]); ret += list[(tmp &amp; 16515072) &gt;&gt; 18]; ret += list[(tmp &amp; 258048) &gt;&gt; 12]; ret += str.length() - p == 1 ? '=' : list[(tmp &amp; 4032) &gt;&gt; 6]; ret += str.length() - p &lt;= 2 ? '=' : list[tmp &amp; 63]; } return ret; } string decode(const string &amp;str) { const char *back = get_back(); string ret = &quot;&quot;; for (int p = 0; p &lt; str.length(); p += 4) { unsigned int tmp = ((unsigned int)back[str[p]] &lt;&lt; 18) | ((unsigned int)back[str[p+1]] &lt;&lt; 12) | ((unsigned int)back[str[p+2]] &lt;&lt; 6) | ((unsigned int)back[str[p+3]]); ret += char((tmp &amp; 16711680) &gt;&gt; 16); if (str[p+1] != '=') ret += char((tmp &amp; 65280) &gt;&gt; 8); if (str[p+2] != '=') ret += char(tmp &amp; 255); } return ret; }}","link":"/2022/09/10/base64/"},{"title":"在雪中绽放的玫瑰花","text":"在见到跨性别女性这一概念时，就被深深地折服了。这是多么悲壮，又多么美丽的过程。为了找到自己原来的样子，放弃一切，走上血路，最后成为在雪中绽放的玫瑰花。 本文的实际创作时间是 2022-09-14 08:18:10. 你是怎么找到这里来的？（笑给客官上茶！ 我不知道怎么描述这句话。这句话是我的一个朋友，曾经是一位友跨顺男说的。 歌颂苦难是我们最常见的文化之一。我们会说，“天将降大任于是人也，必先苦其心志，劳其筋骨，饿其体肤，空乏其身，行拂乱其所为，所以动心忍性，曾益其所不能。”我们会说，“盖文王拘而演《周易》；仲尼厄而作《春秋》；屈原放逐，乃赋《离骚》；左丘失明，厥有《国语》；孙子膑脚，兵法修列；不韦迁蜀，世传《吕览》；韩非囚秦，《说难》《孤愤》；《诗》三百篇，大底圣贤发愤之所为作也。”大抵一切苦难在国人的心中都是迈向成功的种子。的确，人生漫漫，我们都是摸着石头过河，统计意义上，走得越远的人摔跤越多。歌颂苦难的文化给了我们一种动力，苦行僧式的修行让我们在足以摧毁一个人的逆境中拥有了自我感动的力量。 没错，自我感动。稍稍感受一下其中的逻辑，就会发现“走得远”和“摔跤多”并不存在必然的因果关系。我们摸着石头过河，总有人在第一步就被流水冲走。几年前的《感动中国》里十个有八个死人，他们常常经历了称得上国家级典范的苦难，可最后拥有了什么呢？也许是尸骨无存，和亲人泪流满面接过的水晶杯。更何况还有无数挣扎的人，猝死在加班里，撞死在车流中，病死在医院里，吞没在时代中。人类行进了几万年的历史，从一种死法换成了另一种死法而已。这种现状，真的有意义吗？ 正所谓“梅花香自苦寒来”。社群里流传着一种看法，“跨性别者就像夜空中绽放的烟花，昙花一现的灿烂过后壮烈的消逝”。我个人是很不喜欢这种看法的。它把痛苦描述的太美，却无意间隐藏了美丽背后的代价。 而且，我们本可以不这么美。如果可能，我们本可以普通的长大，普通的考大学，普通的结婚，普通的老去。 我更愿意做一朵平淡的迎春花，于万千春光中绽放，也于夏日默默消逝。我宁愿拒绝成为那枝特立独行的昙花，甚至是稍纵即逝的烟花。 或许，这一切的根源不过是我们被迫生长在荒地。就像群落的演替那样，我们不得不出生在苦难中，面临贫瘠的土壤，干旱的气候。我们是开拓者，是荒芜与生机的分界线。有些人不幸扎根在荒芜，汲取不到一点水分，夭折在黑暗中。有些人拥有更多的幸运，顶破石缝，用微弱的阳光活出了生命的奇迹。还有一些人，最幸运地落地在土壤中，即使长成万红丛中一点绿，也拥有着肆无忌惮的生活。相同的身份，不同的苦难，这一切不过是因为我们身处社会的边缘而已。如果有一天我们现在所处的社会边缘也能演化成森林，谁会不愿意用苦难的美换自由的生长呢？ 所以，我希望为先驱者的陨落感叹惋惜的时候，不要忘记造成我们一切苦难的根源。如果有一天我们生长的环境不在恶劣，我们也不再会昙花一现，不再会用生命点燃绽放的烟花。——而那最重要的是我们努力活下去，把磐石风化成土壤，把雨水滞留在土地。 我们最后总要冲破阻碍沐浴在阳光下。","link":"/2021/09/14/%E5%9C%A8%E9%9B%AA%E4%B8%AD%E7%BB%BD%E6%94%BE%E7%9A%84%E7%8E%AB%E7%91%B0%E8%8A%B1/"},{"title":"Discourse同步脚本做好辣！","text":"项目地址： https://github.com/Lhcfl/discourse-auto-upload 大概就是这么一个很简单的上传脚本。 实现的功能，大概还只有把markdown和纯文本自动上传和同步到discourse论坛上吧。 config.yml应该很好读，嗯。","link":"/2022/11/25/Discourse%E5%90%8C%E6%AD%A5%E8%84%9A%E6%9C%AC%E5%81%9A%E5%A5%BD%E8%BE%A3%EF%BC%81/"},{"title":"再次碎碎念","text":"很久没有来更新blog了耶。 刚刚发现自己的blog被 某站 收录了。啊这。 如果你是从这个站来的……多少要失望了？（笑 写几篇文章去。肯定不会与跨性别有关的，放心吧。 另附：捏麻麻滴，我也有被收录的一天？这下出名了","link":"/2022/11/25/%E5%86%8D%E6%AC%A1%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"无聊","slug":"无聊","link":"/tags/%E6%97%A0%E8%81%8A/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"主题","slug":"主题","link":"/tags/%E4%B8%BB%E9%A2%98/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"OI","slug":"OI","link":"/tags/OI/"},{"name":"游记","slug":"游记","link":"/tags/%E6%B8%B8%E8%AE%B0/"},{"name":"C++","slug":"C","link":"/tags/C/"},{"name":"教程","slug":"教程","link":"/tags/%E6%95%99%E7%A8%8B/"},{"name":"转帖","slug":"转帖","link":"/tags/%E8%BD%AC%E5%B8%96/"},{"name":"GPG","slug":"GPG","link":"/tags/GPG/"},{"name":"笔记","slug":"笔记","link":"/tags/%E7%AC%94%E8%AE%B0/"},{"name":"杂项","slug":"杂项","link":"/tags/%E6%9D%82%E9%A1%B9/"},{"name":"数学","slug":"数学","link":"/tags/%E6%95%B0%E5%AD%A6/"},{"name":"碎碎念","slug":"碎碎念","link":"/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"负能","slug":"负能","link":"/tags/%E8%B4%9F%E8%83%BD/"},{"name":"心理","slug":"心理","link":"/tags/%E5%BF%83%E7%90%86/"},{"name":"量表","slug":"量表","link":"/tags/%E9%87%8F%E8%A1%A8/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Ubuntu","slug":"Ubuntu","link":"/tags/Ubuntu/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"selenium","slug":"selenium","link":"/tags/selenium/"},{"name":"VHD","slug":"VHD","link":"/tags/VHD/"},{"name":"Windows","slug":"Windows","link":"/tags/Windows/"},{"name":"discourse","slug":"discourse","link":"/tags/discourse/"},{"name":"api","slug":"api","link":"/tags/api/"},{"name":"Vim","slug":"Vim","link":"/tags/Vim/"},{"name":"已失效","slug":"已失效","link":"/tags/%E5%B7%B2%E5%A4%B1%E6%95%88/"},{"name":"LGBT","slug":"LGBT","link":"/tags/LGBT/"},{"name":"RLE","slug":"RLE","link":"/tags/RLE/"},{"name":"MtF","slug":"MtF","link":"/tags/MtF/"},{"name":"wine","slug":"wine","link":"/tags/wine/"},{"name":"墙","slug":"墙","link":"/tags/%E5%A2%99/"},{"name":"v2ray","slug":"v2ray","link":"/tags/v2ray/"},{"name":"性别焦虑","slug":"性别焦虑","link":"/tags/%E6%80%A7%E5%88%AB%E7%84%A6%E8%99%91/"},{"name":"医疗","slug":"医疗","link":"/tags/%E5%8C%BB%E7%96%97/"},{"name":"物理","slug":"物理","link":"/tags/%E7%89%A9%E7%90%86/"},{"name":"理论","slug":"理论","link":"/tags/%E7%90%86%E8%AE%BA/"},{"name":"GitHub","slug":"GitHub","link":"/tags/GitHub/"},{"name":"日记","slug":"日记","link":"/tags/%E6%97%A5%E8%AE%B0/"},{"name":"散记","slug":"散记","link":"/tags/%E6%95%A3%E8%AE%B0/"},{"name":"Ruby","slug":"Ruby","link":"/tags/Ruby/"},{"name":"脚本","slug":"脚本","link":"/tags/%E8%84%9A%E6%9C%AC/"},{"name":"Discourse","slug":"Discourse","link":"/tags/Discourse/"}],"categories":[]}